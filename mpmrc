#!/bin/bash
# ~/.config/mpm/mpmrc (version 1.5-4)

########################################################
#                                                      #
#    ███╗   ███╗██████╗ ███╗   ███╗██████╗  ██████╗    #
#    ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔════╝    #
#    ██╔████╔██║██████╔╝██╔████╔██║██████╔╝██║         #
#    ██║╚██╔╝██║██╔═══╝ ██║╚██╔╝██║██╔══██╗██║         #
#    ██║ ╚═╝ ██║██║     ██║ ╚═╝ ██║██║  ██║╚██████╗    #
#    ╚═╝     ╚═╝╚═╝     ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝    #
#                                                      #
####### MPV-PLAYLISTS-MANAGER CONFIGURATION FILE #######
######### THE PLACE FOR YOUR PERSONAL SETTINGS #########
#~~~~~ change the values, not the variables names ~~~~~#

# shellcheck disable=SC2034,SC2016,SC2154,SC1083
: "${XDG_DATA_HOME:-$HOME/.local/share}"

# checking for mpm updates yes/no
check_updates="yes"

# change the main mpm window size. (the actual size is 1260x738)
width=1260
height=738

# edit your own theme in "$XDG_CONFIG_HOME"/mpm/themerc.
# apply your prefered colorscheme...
# AVAILABLE THEMES: default, dracula, blacksea, chocolat-pistache,
# gruvbox, gotham, monokai, TokyoNight, solarized, vacuous, zenburn
THEME="default"

## default editor
MPMEDITOR="${EDITOR:-vim}"

## default file manager (can be any terminal file manager)
## used in option 5) Load local dir/files
FILEMANAGER="ranger"

## THESE ARE BY DEFAULT DIRECTORIES USED BY MPM.

# The main directory can be renamed but must be present for mpm to work.
# main_dir="$HOME/Documents/mpv-playlists-manager"
main_dir="$XDG_DATA_HOME/mpv-playlists-manager"

# define your multimedia directories according to your locales.
MUSIC_DIR="$HOME/Music"
VIDEO_DIR="$HOME/Videos"

# The default playlist & all the created ones are stored here.
playlists_dir="$main_dir/playlists"

# Be carefull with this one because if you choose to use the conversion action,
# ALL .webm files in that directory will be converted.
# audios_dir="$HOME/Music/mpm_audios"
audios_dir="$MUSIC_DIR/mpm_audios"
videos_dir="$VIDEO_DIR/mpm_videos"
titles_dir="$main_dir/titles"
tmp_dir="$main_dir/tmp"

# some links may still be present in playlist files...
# if value is 'no' you will be prompted.
keep_none_empty_playlist="yes"

## DEFAULT TASKS ANSWERS
# from download tasks (option 4) we are prompted or not to choose formats.
# (will appear in main menu)
direct_download="no"

# this takes place only after downloading/playing from a collection playlist.
# (will appear in main menu)
quit_after_task="no"

########### SEARCH YOUTUBE USING FZF FUNCTIONALITY ###########
# Two methods are offered here:
# If the fzf package is installed it will be used to search and copy 
# audio/video urls from youtube in a simple but limited way.
# In addition you can also use the ytfzf script if it is in your $PATH.
# <https://github.com/pystardust/ytfzf>
use_fzf="no"

## add/change your ytfzf preferences here
# use odysee instead of youtube
# see man ytfzf
ytfzfOptions_SC=( --scrape=odysee )
# force youtube search
ytfzfOptions_YT=( --force-youtube )
ytfzfOptions_PG=( --pages=5 )
ytfzfOptions_VD=( --video-duration=long )
ytfzfOptions_SB=( --sort-by=relevance )
ytfzfOptions_TY=( --type=all )
# add your options in this array,
# ytfzfOptions_SC & ytfzfOptions_YT are in conflict...
ytfzfOptions_X=( "${ytfzfOptions_YT[@]}" "${ytfzfOptions_PG[@]}" \
"${ytfzfOptions_VD[@]}" "${ytfzfOptions_SB[@]}" "${ytfzfOptions_TY[@]}" )

############ FFMPEG SPECIFICS (audio conversion) ############
# !!! You can change ffmpeg audio codec command line settings !!!
# if the parallel package is installed then it will be used to launch
# multiple conversions at once in the equivalent quality,
# else files will be converted one by one.
use_parallel="no"

# audio files (.webm) conversion.
# (will appear in main menu)
automatic_audio_conversion="no"

# default audio conversion format {mp3,flac,wav,ogg},
# mp3 & ogg in 320k, flac & wav are lossless.
# if value is empty you will be prompted.
# (will appear in main menu)
default_conversion_format="mp3"

# if you want to change ffmpeg codecs options...
# example for mp3: -acodec libmp3lame -ar 48000 -ab 320k

function _mp3 {
    find . -iname "*.webm" -exec \
    bash -c 'FILE="$1"; \
        ffmpeg -i "${FILE}" \
        -acodec libmp3lame -ar 48000 -ab 320k \
        -y "${FILE%.webm}.mp3";' _ '{}' \; 2>"$FFOP"
}

function _flac {
    find . -iname "*.webm" -exec \
    bash -c 'FILE="$1"; \
        ffmpeg -i "${FILE}" \
        -af aformat=s32:48000 \
        -y "${FILE%.webm}.flac";' _ '{}' \; 2>"$FFOP"
}

function _wav {
    find . -iname "*.webm" -exec \
    bash -c 'FILE="$1"; \
        ffmpeg -i "${FILE}" \
        -acodec pcm_s32le -ar 48000 \
        -y "${FILE%.webm}.wav";' _ '{}' \; 2>"$FFOP"
}

function _ogg {
    find . -iname "*.webm" -exec \
    bash -c 'FILE="$1"; \
        ffmpeg -i "${FILE}" \
        -acodec libvorbis -ar 48000 -ab 320k \
        -y "${FILE%.webm}.ogg";' _ '{}' \; 2>"$FFOP"
}

## MPV SPECIFICS
# mpv audio online playing command line
function _MpvAudioOptions {
    # change mpv audio settings here if needed but do not remove "$1"
    mpv \
    --input-ipc-server='/tmp/mpvsocket' \
    --no-config \
    --no-resume-playback \
    --term-playing-msg="${info}"'Title: ${media-title}'"${nc}" \
    --ytdl-format='bestaudio/best' "$1"
}

# mpm video online playing command line
function _MpvVideoOptions {
    # same as above.
    mpv \
    --input-ipc-server='/tmp/mpvsocket' \
    --cache=yes \
    --demuxer-max-bytes=300MiB \
    --demuxer-readahead-secs=30 \
    --no-config \
    --no-resume-playback \
    --term-playing-msg="${info}"'Title: ${media-title}'"${nc}" \
    --ytdl-format='299+251/298+251/137+251/136+251/best' "$1"
}

# change the yt-dlp downloader presets ONLY for youtube video downloads
# (not tested elsewhere)
# take a look at 'man yt-dlp'
# !!! do not change the name of the array (ytdlPreset_<*>) !!!
# downloader name
ytdlPreset_DN=( --downloader m3u8:ffmpeg )
# downloader arguments (do not redownload existing files)
ytdlPreset_DA=( --downloader-args '-n' )
# same as above but ffmeg isn't the downloader.
ytdlPreset_BR=( --break-on-existing )
# merge format
ytdlPreset_MF=( --merge-output-format mp4 )
# downloader warnings
ytdlPreset_DW=( --no-warnings )
# downloader progress
ytdlPreset_DP=( --progress )
# downloader filename sanitization
# (this avoid the creation of subdirectories because of filenames containing '/').
ytdlPreset_FS=( --compat-options filename-sanitization )
# downloader without multiple format codes
ytdlPreset_NC=( "${ytdlPreset_BR[@]}" "${ytdlPreset_DW[@]}" "${ytdlPreset_DP[@]}" )
# combined presets
ytdlPreset_X=( "${ytdlPreset_DN[@]}" "${ytdlPreset_DA[@]}" \
"${ytdlPreset_MF[@]}" "${ytdlPreset_DW[@]}" "${ytdlPreset_DP[@]}" )
