#!/usr/bin/env bash
#
##  Author: Barret E (2021-25) <archus@protonmail.com>
##  https://github.com/archusXIV/mpv-playlists-manager/blob/main/mpm
##  Dependencies: ffmpeg, jq, mpv, yt-dlp.
##  Optionals: dialog, exiftool, fzf, less, mediainfo, parallel,
##             ueberzug, ranger, socat, w3m, ytfzf.
##
##  Youtube-dl is for now kind of unmaintained so install yt-dlp
##  https://github.com/yt-dlp/yt-dlp/releases
##  sudo pacman -S yt-dlp
##
##  This script rips video urls from Youtube and so on.
##  In our case we use ".m3u" files to store urls in and then be able
##  to watch from the site itself or download videos or just the audio.
##  We can save, remove or edit playlists & mpm config file (mpmrc).
##  It is recommanded to disable mpv cache for better results on direct streaming,
##  or find a better cache parameter.

# shellcheck source=/dev/null
# shellcheck disable=SC2034,SC2044,SC2154,SC2001,SC2207
trap _CleanTmpDir SIGTERM EXIT

VERSION="v.2.3-2"

CONF_DIR="$HOME/.config/mpm"

[[ ! -d $CONF_DIR ]] && {
    mkdir -p "$CONF_DIR"
    cp /usr/local/share/doc/mpm/{mpmrc,themerc} "$CONF_DIR"
}

MPMRC="$CONF_DIR/mpmrc"
THEMERC="$CONF_DIR/themerc"
. "$MPMRC"

for index in "${mpvGenOptions_X[@]}"; do
    if [[ $index =~ --idle=|--idle ]]; then
        sed -i "s/${index}/--idle=no/" "$MPMRC"
        break
    fi
done

if [[ ! -f $THEMERC ]]; then
    cp /usr/local/share/doc/mpm/themerc "$CONF_DIR"
    . "$THEMERC"
    _Theme "$THEME"
elif [[ -z $THEME ]]; then
    theme="default"; nc=$'\e[0m'; critical=$'\e[31m';
    info=$'\e[32m'; mtitle=$'\e[33m'; task=$'\e[37m';
else
    . "$THEMERC"
    _Theme "$THEME"
fi

## prompts blinking
b=$'\e[5m';
nb=$'\e[25m';
lessColor=$'\e[0m';

## Source our functions.
if [[ -d /usr/local/lib/mpm ]]; then
    for func in /usr/local/lib/mpm/*_*; do
        if [[ -x $func ]]; then
            . "$func"
        else
            chmod +x "$func"; . "$func"
        fi
    done
    unset func
else
    printf '%s\n' " ${critical}mpm functions directory does not exist.${nc}"
    exit 127
fi

_BlankLine() { printf '\n'; }
_Has() { command -v "$1" &>/dev/null; }
_PidOfMpv() { pgrep -x mpv; }
_killMpv() { kill -SIGTERM "$(_PidOfMpv)"; }

# global variables
AUDIO_URLS="$tmp_dir/temporaryAudioUrls.m3u"
AUDIO_TITLES="$tmp_dir/temporaryAudioTitles"
DEFAULT_LIST="$playlists_dir/default.m3u"
DEFAULT_TITLES="$tmp_dir/defaultTitles"
DEFAULTM3UTITLES="$titles_dir/default.m3u.titles"
EXTENSIONS="(.aac|.flac|.m4a|.mp3|.mp4|.ogg|.wav|.webm)"
FFOP="$tmp_dir/ffmpeg_output"
FZFENQUEUE="$tmp_dir/fzfEnqueue.m3u"
FZFSELTITLES="$tmp_dir"/fzfSelectedTitles
HELP="/usr/local/share/doc/mpm/help"
JOBSLIST="$tmp_dir/parallel_list"
MPM_VERSION="https://raw.githubusercontent.com/archusXIV/mpv-playlists-manager/main/version"
MPVSOCKET=$(sed 's/--input-ipc-server=//' <<< "${mpvGenOptions_SK[*]}")
[[ ! -S $MPVSOCKET ]] && MPVSOCKET="/tmp/mpvsocket"
NOWPLAYING="$tmp_dir/nowPlaying"
SELECTED_TITLES="$tmp_dir/selected.titles"
SELECTED_URLS1="$tmp_dir/temporarySelection.m3u"
SELECTED_URLS2="$tmp_dir/temporarySelection2.m3u"
SUPPORTED_SITES="https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md"
VIDEO_URLS="$tmp_dir/temporaryVideoUrls.m3u"
VIDEO_TITLES="$tmp_dir/temporaryVideoTitles"
YTSEARCH="$tmp_dir/youtubeSearch"
YTFZFJSON="$tmp_dir/ytfzf.json"
RANGEPROMPT=$(
printf '%s\n' " ${info}Enter numbers separeted by commas or a dash for a range," \
" for example: ${task}1-4,6 8-11 or 1-4,6-8,10 or 2,3,5,6,1 ${info}[${mtitle}C${info}]ancel: ${nc}"
)

[[ -z $parallel_threads ]] && parallel_threads=4

_CheckPids() {
    local scriptname pids
    scriptname=$(basename "$0")
    pids=($(pidof -x "$scriptname"))

    if [[ -f $NOWPLAYING && ${#pids[@]} -eq 3 ]] \
        || [[ ! -f $NOWPLAYING && ${#pids[@]} -eq 2 ]]; then
        printf '\n%s\n' " ${critical}${scriptname##*/} is already running...${nc}"
        notify-send -u critical "${0##*/} is already running..."
        exit 1
    fi
}

_CheckPids
_MpmOptions "${@}"
