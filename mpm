#!/bin/bash

##    GNU GENERAL PUBLIC LICENSE Version 2, June 1991
##
##    Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
##    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##    Everyone is permitted to copy and distribute verbatim copies
##    of this license document, but changing it is not allowed.
##
##    Author: Barret E (2021-24) <archus@protonmail.com>
##    https://github.com/archusXIV/mpv-playlists-manager/blob/main/mpm
##    Dependencies: ffmpeg, jq, mpv, yt-dlp.
##    Optionals: fzf, parallel, ueberzug, ranger, socat, w3m, wmctrl, ytfzf
##
##    Youtube-dl is for now kind of unmaintained so install and make a symlink with
##    https://github.com/yt-dlp/yt-dlp/releases
##    sudo pacman -S yt-dlp
##
##    This script rips video urls from Youtube and so on.
##    In our case we use ".m3u" files to store urls in and then be able
##    to watch from the site itself or download videos or just the audio.
##    We can save, remove or edit playlists & mpm config file (mpmrc).
##    It is recommanded to disable mpv cache for better results on direct streaming,
##    or find a better cache parameter.

# shellcheck source=/dev/null
# shellcheck disable=SC2034,SC2044,SC2154,SC2001,SC2207
MPM=$(basename "$0")
pids=($(pidof -x "$MPM"))

trap _CleanTmpDir SIGTERM EXIT

VERSION="v.2.0-5"

CONF_DIR="$HOME/.config/mpm"

[[ ! -d $CONF_DIR ]] && {
    mkdir -p "$CONF_DIR"
    cp /usr/local/share/doc/mpm/{mpmrc,themerc} "$CONF_DIR"
}

MPMRC="$CONF_DIR/mpmrc"
THEMERC="$CONF_DIR/themerc"
. "$MPMRC"

for index in "${mpvGenOptions_X[@]}"; do
    if [[ $index =~ --idle=|--idle ]]; then
        sed -i "s/${index}/--idle=no/" "$MPMRC"
        break
    fi
done

if [[ ! -f $THEMERC ]]; then
    cp /usr/local/share/doc/mpm/themerc "$CONF_DIR"
    . "$THEMERC"
    _Theme "$THEME"
elif [[ -z $THEME ]]; then
    theme="default"; nc=$'\e[0m'; critical=$'\e[31m';
    info=$'\e[32m'; mtitle=$'\e[33m'; task=$'\e[37m';
else
    . "$THEMERC"
    _Theme "$THEME"
fi

## prompts blinking
b=$'\e[5m';
nb=$'\e[25m';
lessColor=$'\e[0m';

## Source our functions.
if [[ -d /usr/local/lib/mpm ]]; then
    for func in /usr/local/lib/mpm/*_*; do
        [[ -f $func ]] && . "$func"
    done
    unset func
else
    printf '%s\n' " ${critical}mpm functions directory does not exist.${nc}"
    exit 127
fi

# creates a blank line
__() { printf '\n'; }

_PidOfMpv() { pgrep -x mpv; }

# global variables
AUDIO_URLS="$tmp_dir/temporaryAudioUrls.m3u"
AUDIO_TITLES="$tmp_dir/temporaryAudioTitles"
BINDINGS="/usr/local/share/doc/mpm/mpm_bindings"
CHEATSHEET="/usr/local/share/doc/mpm/ncmpvc_cheatsheet"
DEFAULT_LIST="$playlists_dir/default.m3u"
DEFAULT_TITLES="$tmp_dir/defaultTitles"
DEFAULTM3UTITLES="$titles_dir/default.m3u.titles"
FFOP="$tmp_dir/ffmpeg_output"
FZFENQUEUE="$tmp_dir/fzfEnqueue.m3u"
HELP="/usr/local/share/doc/mpm/help"
JOBSLIST="$tmp_dir/parallel_list"
MPVSOCKET=$(sed 's/--input-ipc-server=//' <<< "${mpvGenOptions_SK[*]}")
[[ ! -S $MPVSOCKET ]] && MPVSOCKET="/tmp/mpvsocket"
NOWPLAYING="$tmp_dir/nowPlaying"
SELECTED_TITLES="$tmp_dir/selected.titles"
SELECTED_URLS1="$tmp_dir/temporarySelection.m3u"
SELECTED_URLS2="$tmp_dir/temporarySelection2.m3u"
VIDEO_URLS="$tmp_dir/temporaryVideoUrls.m3u"
VIDEO_TITLES="$tmp_dir/temporaryVideoTitles"
YTSEARCH="$tmp_dir/youtubeSearch"
YTFZFJSON="$tmp_dir/ytfzf.json"
RANGEPROMPT=$(
printf '%s\n' " ${info}Enter numbers separeted by commas or a dash for a range," \
" for example: ${task}1-4,6 8-11 or 1-4,6-8,10 or 2,3,5,6,1 ${info}[${mtitle}C${info}]ancel: ${nc}"
)

[[ -z $parallel_threads ]] && parallel_threads=4

if [[ ! -e $NOWPLAYING && ${#pids[@]} -gt 1 ]] || \
    [[ -e $NOWPLAYING && ${#pids[@]} -gt 2 ]]; then
    __
    printf '%s\n' " ${critical}${0##*/} is already running...${nc}"
    notify-send -t 0 -u critical "${0##*/} is already running..."
    exit 1
fi

_MpmOptions "${@}"