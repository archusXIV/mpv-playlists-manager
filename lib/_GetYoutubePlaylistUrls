#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_GetYoutubePlaylistUrls() {

    __getYoutubePlaylistUrlsInfo() (
        playlistName=$(yt-dlp "${ytdlPreset_DW[@]}" -J \
        --flat-playlist "$url" | jq --raw-output .title)
        __
        printf '%s\n' \
        " ${info}Please be patient while extracting urls/titles from:" \
        " $playlistName playlist...${nc}"
    )

    case "$1" in
        -a|-v)
            if [[ -n $(command -v ytfzf) && $use_fzf = yes ]]; then

                ytfzf -A -I VJ --scrape=youtube-playlist \
                "$mediaUrl" > "$YTFZFJSON";clear
                jq --raw-output '.[].url' "$YTFZFJSON" \
                | tee -a "$QUEUE" >> "$URLS"
                
                jq --raw-output '.[].title' "$YTFZFJSON" \
                | tee -a "$DEFAULTITLES" >> "$TITLES"
                rm "$YTFZFJSON"

            elif [[ -n $(command -v parallel) && $use_parallel = yes ]]; then
                url="$mediaUrl"
                export url
                _ParallelDownloadCmd --yt-playlist
            else
                _YtdlGetTitle "$mediaUrl" \
                | tee -a "$TITLES" >> "$DEFAULTITLES"
                yt-dlp "${ytdlPreset_DW[@]}" -j "$mediaUrl" \
                | jq --raw-output '(.webpage_url)' \
                | tee -a "$QUEUE" >> "$URLS"
            fi
        ;;
        -s)
            mapfile -t < <(grep '^https' "$YTSEARCH")
            # there might be several playlists urls selected in
            # _Search{Online,Youtube}With functions so we enter in a loop.
            for url in "${MAPFILE[@]}"; do
                if [[ -n $(command -v ytfzf) && $use_fzf = yes ]]; then
                    ytfzf -A -I VJ --scrape=youtube-playlist \
                    "$url" > "$YTFZFJSON";clear
                    jq --raw-output '.[].url' "$YTFZFJSON" \
                    | tee -a "$QUEUE" >> "$URLS"
                    jq --raw-output '.[].title' "$YTFZFJSON" \
                    | tee -a "$DEFAULTITLES" >> "$TITLES"
                    rm "$YTFZFJSON"
                elif [[ -n $(command -v parallel) && $use_parallel = yes ]]; then
                    __getYoutubePlaylistUrlsInfo
                    export url
                    _ParallelDownloadCmd --yt-playlist
                else
                    __getYoutubePlaylistUrlsInfo
                    _YtdlGetTitle "$url" \
                    | tee -a "$TITLES" >> "$DEFAULTITLES"

                    yt-dlp "${ytdlPreset_DW[@]}" -j "$url" \
                    | jq --raw-output '(.webpage_url)' \
                    | tee -a "$QUEUE" >> "$URLS"
                    clear
                fi
            done
            
            unset url
            rm "$YTSEARCH"
            clear && return
            
        ;;
    esac

    _RemoveCrap
    sed -i '/playlist/d' {"$QUEUE","$URLS"}

}
