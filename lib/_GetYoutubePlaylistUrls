#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2181,SC2034
_GetYoutubePlaylistUrls() {

    local playlist

    __getYoutubePlaylistUrlsInfo() (
        playlistName=$(yt-dlp "${ytdlPreset_DW[@]}" -J \
        --flat-playlist "$playlist" | jq --raw-output .title)
        __
        printf '%s\n' \
        " ${info}Please be patient while extracting urls/titles from:" \
        " $playlistName playlist...${nc}"; sleep 1
    )

    case "$1" in
        -a|-v)
            playlist="$mediaUrl"
            if [[ -n $(command -v ytfzf) && $use_fzf == yes ]]; then
                _GetYoutubePlaylistUrlsMethods --ytfzf 2>/dev/null
            elif [[ -n $(command -v parallel) && $use_parallel == yes ]]; then
                _GetYoutubePlaylistUrlsMethods --parallel
            else
                _GetYoutubePlaylistUrlsMethods --native
            fi
        ;;
        -s)
            mapfile -t ytSearchList < <(grep '^https' "$YTSEARCH")
            # there might be several playlists urls selected in
            # _SearchYoutubeWithFzf function so we enter in a loop.
            for url in "${ytSearchList[@]}"; do
                playlist="$url"
                __getYoutubePlaylistUrlsInfo
                if [[ -n $(command -v ytfzf) && $use_fzf == yes ]]; then
                    _GetYoutubePlaylistUrlsMethods --ytfzf 2>/dev/null
                elif [[ -n $(command -v parallel) && $use_parallel == yes ]]; then
                    _GetYoutubePlaylistUrlsMethods --parallel
                else
                    _GetYoutubePlaylistUrlsMethods --native
                fi
            done

            unset url
            clear
        ;;
    esac

    rm {"$YTSEARCH","$YTFZFJSON","$tmp_dir"/playlist.{m3u,titles,titles_urls,txt}} 2>/dev/null
    rm -rf "$HOME"/.parallel 2>/dev/null

    _RemoveCrap
    _IfDuplicatesFiles

}
