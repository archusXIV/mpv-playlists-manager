#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_GetYoutubePlaylistUrls() {

    case "$1" in
        -a|-v)
            if [[ -n $(command -v ytfzf) && $use_fzf = yes ]]; then

                ytfzf -A -I VJ --scrape=youtube-playlist \
                "$mediaUrl" > "$YTFZFJSON";clear
                jq --raw-output '.[].url' "$YTFZFJSON" \
                | tee -a "$QUEUE" >> "$URLS"
                jq --raw-output '.[].title' "$YTFZFJSON" \
                | tee -a "$DEFAULTITLES" >> "$TITLES"
                rm "$YTFZFJSON"
                _RemoveCrap

            else

                _YtdlGetTitle "$mediaUrl" \
                | tee -a "$TITLES" >> "$DEFAULTITLES"
                
                yt-dlp "${ytdlPreset_DW[@]}" -j "$mediaUrl" \
                | jq --raw-output '(.webpage_url)' \
                | tee -a "$QUEUE" >> "$URLS"

            fi
        ;;
        -s)
            mapfile -t < <(grep '^https' "$YTSEARCH")
            # there might be several playlists urls selected in
            # _Search{Online,Youtube}With functions so we enter in a loop.
            for url in "${MAPFILE[@]}"; do

                playlistName=$(yt-dlp "${ytdlPreset_DW[@]}" -J \
                --flat-playlist "$url" | jq --raw-output .title)
                __
                printf '%s\n' \
                " ${info}Please be patient while extracting urls/titles from:" \
                " $playlistName playlist...${nc}"

                yt-dlp "${ytdlPreset_DW[@]}" -j "$url" \
                | jq --raw-output '(.webpage_url)' \
                | tee -a "$QUEUE" >> "$URLS"
                
                _YtdlGetTitle "$url" \
                | tee -a "$TITLES" >> "$DEFAULTITLES"
                clear
            done
            
            unset url
            _RemoveCrap
            rm "$YTSEARCH"
            clear && return
            
        ;;
    esac

    sed -i '/playlist/d' {"$QUEUE","$URLS"}

}