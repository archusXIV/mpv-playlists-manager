#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_LoadLocalMenuActions() {

    __isFileManagerInstalled() (
        if ! command -v "$FILEMANAGER" >/dev/null; then
            printf '%s\n' " ${critical}$FILEMANAGER is not installed...!${nc}"
            sleep 3
        else
            clear;"$FILEMANAGER" "$localDir"
        fi
    )
    
    case "$1" in
        --Single-dir)
            _MpvOwnsTmpList --local || {
                if [[ $loadLocalMenuOptions == 1 ]]; then
                    localDir="$MUSIC_DIR"; [[ -z $use_mpvc ]] && localMediaType=audio
                    _ReplaceSpaces -l
                    clear;__
                    _SelectLocalDir -d
                elif [[ $loadLocalMenuOptions == 3 ]]; then
                    localDir="$VIDEO_DIR"; [[ -z $use_mpvc ]] && localMediaType=video
                    _ReplaceSpaces -l
                    clear;__
                    _SelectLocalDir -d
                fi
            }
        ;;
        --files)
            _MpvOwnsTmpList --local || {
                if [[ $loadLocalMenuOptions == 2 ]]; then
                    localDir="$MUSIC_DIR"; [[ -z $use_mpvc ]] && localMediaType=audio
                    if [[ -n $(command -v fzf) && $use_fzf = yes ]]; then
                        clear; __; _SelectLocalDir -f; _Menu
                    else
                        __isFileManagerInstalled
                    fi
                elif [[ $loadLocalMenuOptions == 4 ]]; then
                    localDir="$VIDEO_DIR"; [[ -z $use_mpvc ]] && localMediaType=video
                    if [[ -n $(command -v fzf) && $use_fzf = yes ]]; then
                        clear; __; _SelectLocalDir -f; _Menu
                    else
                        __isFileManagerInstalled
                    fi
                fi
            }
        ;;
        --explore)
            [[ $loadLocalMenuOptions == 5 ]] && localDir="$MUSIC_DIR"
            [[ $loadLocalMenuOptions == 6 ]] && localDir="$VIDEO_DIR"
            __isFileManagerInstalled
        ;;
        --multiple-dirs)
            _MpvOwnsTmpList --local || {
                read -rsn 1 \
                -p " ${info}Queue multiple [A]udio or [V]ideo directories: ${nc}" \
                diranswer
                case "$diranswer" in
                    a|A) localDir="$MUSIC_DIR"; [[ -z $use_mpvc ]] && localMediaType=audio ;;
                    v|V) localDir="$VIDEO_DIR"; [[ -z $use_mpvc ]] && localMediaType=video ;;
                    *) __; _WrongOption "$diranswer"; return ;;
                esac
                _QueueMultipleDirs
            }
        ;;
        --radio-dir)
            _MpvOwnsTmpList --local || {
                if [[ -n $radios_dir ]]; then
                    localDir="$radios_dir"
                    if [[ -n $(command -v fzf) && $use_fzf == yes ]]; then
                        fzf_preview=(cat)
                        clear; __; _FzfEnqueue
                    else
                        printf '%s\n' \
                        " ${critical}The fzf package isn't installed, or use_fzf is set to 'no'.${nc}"
                        sleep 4; return
                    fi
                else
                    printf '%s\n' \
                    " ${critical}radios_dir isn't defined in mpmrc.${nc}"
                    sleep 3; __isFileManagerInstalled
                fi
            }
        ;;
        --somabox)
            if [[ -n $(command -v somabox) && $use_somabox == yes ]]; then
                _MpvOwnsTmpList --local || somabox
            else
                __
                printf '%s\n' " ${critical}use_somabox is set to 'no' in mpmrc" \
                " or the somabox script isn't in you \$PATH..." \
                " unabled to launch the player.${nc}"; sleep 7; return
            fi
        ;;
    esac
}