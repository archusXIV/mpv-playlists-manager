#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_LoadLocalMenuActions() {

    __isFileManagerInstalled() (
        if ! _Has "$FILEMANAGER"; then
            printf '%s\n' " ${critical}$FILEMANAGER is not installed...!${nc}"
            sleep 3
        else
            clear
            "$FILEMANAGER" "$localDir"
        fi
    )

    __settingLoadLocalVars() {
        if [[ $1 == '-a' ]]; then
            localDir="$MUSIC_DIR"
            [[ -z $use_mpvc ]] && localMediaType=audio
        else
            localDir="$VIDEO_DIR"
            [[ -z $use_mpvc ]] && localMediaType=video
        fi
    }

    # test if the player owns the tmp local playlist before going futher.
    case "$1" in
        --explore)
            [[ $loadLocalMenuOptions == 5 ]] && localDir="$MUSIC_DIR"
            [[ $loadLocalMenuOptions == 6 ]] && localDir="$VIDEO_DIR"
            __isFileManagerInstalled
        ;;
        --files)
            _MpvOwnsTmpList --local || {
                if [[ $loadLocalMenuOptions == 2 ]]; then
                    __settingLoadLocalVars -a
                elif [[ $loadLocalMenuOptions == 4 ]]; then
                    __settingLoadLocalVars -v
                fi
                if _Has fzf && [[ $use_fzf == yes ]]; then
                    clear; _BlankLine; _SelectLocalDir -f; _Menu
                else
                    __isFileManagerInstalled
                fi
            }
        ;;
        --multiple-dirs)
            _MpvOwnsTmpList --local || {
                read -rsn 1 \
                -p " ${info}Queue multiple [A]udio or [V]ideo directories: ${nc}" diranswer
                case "$diranswer" in
                    a|A) __settingLoadLocalVars -a ;;
                    v|V) __settingLoadLocalVars -v ;;
                    *  ) _BlankLine; _WrongOption "$diranswer"; return ;;
                esac
                _QueueMultipleDirs
            }
        ;;
        --radio-dir)
            _MpvOwnsTmpList --local || {
                if [[ -n $radios_dir ]]; then
                    localDir="$radios_dir"
                    if _Has fzf && [[ $use_fzf == yes ]]; then
                        fzf_preview=(cat)
                        clear; _BlankLine; _FzfEnqueue
                    else
                        printf '%s\n' \
                        " ${critical}The fzf package isn't installed, or use_fzf is set to 'no'.${nc}"
                        sleep 4; return
                    fi
                else
                    printf '%s\n' " ${critical}radios_dir isn't defined in mpmrc.${nc}"
                    sleep 3; __isFileManagerInstalled
                fi
            }
        ;;
        --single-dir)
            _MpvOwnsTmpList --local || {
                if [[ $loadLocalMenuOptions == 1 ]]; then
                    __settingLoadLocalVars -a
                elif [[ $loadLocalMenuOptions == 3 ]]; then
                    __settingLoadLocalVars -v
                fi
                _ReplaceSpaces -l
                clear
                _BlankLine
                _SelectLocalDir -d
            }
        ;;
        --somabox)
            if _Has somabox && [[ $use_somabox == yes ]]; then
                _MpvOwnsTmpList --local || somabox
            else
                _BlankLine
                printf '%s\n' " ${critical}use_somabox is set to 'no' in mpmrc" \
                    " or the somabox script isn't in you \$PATH..." \
                    " unabled to launch the player.${nc}"
                sleep 7; return
            fi
        ;;
    esac

}
