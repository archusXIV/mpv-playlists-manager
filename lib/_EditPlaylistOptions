#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_EditPlaylistOptions() {

    local TITLES plst
    TITLES="$titles_dir"/"$list".titles
    plst="$playlists_dir/$list"

    declare -a editPlaylistOptionsPrompt=(
        "[U]rls edition,"
        "[T]itles edition,"
        "[R]ename the playlist,"
        "[D]elete titles,"
        "[${mtitle}C${info}]ancel:"
    )

    printf '\n%s\n' " ${info}Choose an option for ${task}$list:${nc}"
    _BlankLine
    read -rsn 1 -p \
    "${info} ${editPlaylistOptionsPrompt[*]} ${nc}" editPlaylistOptions

    case "$editPlaylistOptions" in
        [cC])
            if [[ $editoption == yes ]]; then
                editoption=no
                clear
                _LaunchMpm "${@}"
            else
                _Menu
            fi
        ;;
        [dD])
            clear
            _MpvOwnsTmpList --collection || \
            if _TestFzfCommand; then
                local removeCollectionTitles
                removeCollectionTitles="yes"
                _TitlesListCompare --fzf
            else
                _TitlesListCompare --list
                _GetRange
                _UpdateSelected --edit
            fi
        ;;
        [rR])
            _BlankLine
            read -r -p " ${info}Enter a new name for ${task}${list%%.*}: ${nc}" newname
            _BlankLine
            _Prompt -n \
            " ${critical}Rename ${task}${list%%.*} ${critical}as ${task}$newname?: ${nc}" && {
                mv -f "$plst" "$playlists_dir/$newname".m3u
                mv -f "$TITLES" "$titles_dir/$newname.m3u.titles"
                _ReplaceSpaces -s
                printf '\n%s\n' " ${critical}${list%%.*} renamed as $newname.${nc}"
                sleep 2
                return
            }
            _Menu
        ;;
        [tT])
            _BlankLine
            _EditListTitles && {
                clear
                printf '\n%s\n' " ${info}$list.titles saved.${nc}"
                sleep 2
            }
        ;;
        [uU])
            "$MPMEDITOR" "$plst"
            mapfile -t -s 1 listCount < "$plst"
            clear
            if ((${#listCount[@]} == 0)); then
                _BlankLine
                printf '%s\n' " ${critical}${plst##*/} is empty...${plst##*/} removed.${nc}"
                rm {"$plst","$TITLES"}
                sleep 2
                _PolybarIpc
            else
                printf '\n%s\n' " ${info}$list saved.${nc}"
                sleep 2
                _TitlesListCompare --list
            fi
        ;;
        *)  _WrongOption "$editPlaylistOptions" ;;
    esac

}
