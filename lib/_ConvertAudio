#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2164,SC2015
_ConvertAudio() {

    [[ -d "$audios_dir"/"${list%.*}" ]] \
    && cd "$audios_dir"/"${list%.*}" \
    || cd "$audios_dir"

    if [[ -n $default_conversion_format ]]; then
        __
        printf '%s\n' " ${task}Default format set to $default_conversion_format.${nc}"
        __
        printf '%s\n' " ${info}Converting files in ${task}$default_conversion_format${b}...${nb}${nc}"
        if [[ -n $(command -v parallel) ]] && [[ $use_parallel = yes ]]; then
            _"$default_conversion_format" -p
        else
            _"$default_conversion_format" -n
        fi
    else
        # functions _mp3 _flac _wav & _ogg are in ~/.config/mpm/mpmrc
        __
        printf '%s\n' " ${task}Default format isn't set." \
        " Press Enter to abort conversion.${nc}"
        __
        read -rn1 \
        -p "${info}"' Select an output format [1=mp3] [2=flac] [3=wav] [4=ogg]: '"${nc}" conv

        case "$conv" in
            1)
                __
                printf '%s\n' " ${info}Converting files in ${task}mp3${b}...${nb}${nc}"
                if [[ -n $(command -v parallel) ]] && [[ $use_parallel = yes ]]; then
                    _mp3 -p
                else
                    _mp3 -n
                fi
            ;;
            2)
                __
                printf '%s\n' " ${info}Converting files in ${task}flac${b}...${nb}${nc}"
                if [[ -n $(command -v parallel) ]] && [[ $use_parallel = yes ]]; then
                    _flac -p
                else
                    _flac -n
                fi
            ;;
            3)
                __
                printf '%s\n' " ${info}Converting files in ${task}wav${b}...${nb}${nc}"
                if [[ -n $(command -v parallel) ]] && [[ $use_parallel = yes ]]; then
                    _wav -p
                else
                    _wav -n
                fi
            ;;
            4)
                __
                printf '%s\n' " ${info}Converting files in ${task}ogg${b}...${nb}${nc}"
                if [[ -n $(command -v parallel) ]] && [[ $use_parallel = yes ]]; then
                    _ogg -p
                else
                    _ogg -n
                fi
            ;;
            *)
                __
                printf '%s\n' " ${critical}Conversion aborted...${nc}"
                sleep 3
                clear
            ;;
        esac
    fi

    if [[ -z $(find "$audios_dir" -maxdepth 2 -name "*.webm" ) ]]; then
        __
        printf '%s\n' " ${info}Conversion done.${nc}"
        sleep 2
        clear
    else
        echo ""
    fi

}
