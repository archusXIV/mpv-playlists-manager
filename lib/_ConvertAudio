#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2164,SC2015
_ConvertAudio() {

    [[ -d "$audios_dir"/"${list%.*}" ]] \
    && cd "$audios_dir"/"${list%.*}" \
    || cd "$audios_dir"

    if [[ -n $default_conversion_format ]]; then
        __
        printf '%s\n' " ${task}Default format set to $default_conversion_format.${nc}"
        __
        printf '%s\n' " ${info}Converting files in ${task}$default_conversion_format${b}...${nb}${nc}"
        __
        if [[ -n $(command -v parallel) && $use_parallel = yes ]]; then
            printf '%s\n' "${task}"' Parallel conversion enabled.'"${nc}"
            _"$default_conversion_format" -p
        else
            printf '%s\n' "${task}"' Parallel conversion disabled.'"${nc}"
            _"$default_conversion_format" -n
        fi
    else
        # functions _mp3 _flac _wav & _ogg are in ~/.config/mpm/mpmrc
        __
        printf '%s\n' " ${task}Default format isn't set." \
        " Press Enter to abort conversion.${nc}"
        declare -A formats=(
            [1]="mp3"
            [2]="flac"
            [3]="wav"
            [4]="ogg"
        )
        __
        read -rn1 \
        -p "${info}"' Select an output format [1=mp3] [2=flac] [3=wav] [4=ogg]: '"${nc}"
        
        case "$REPLY" in
            [1-4])  
                __
                printf '%s\n' " ${info}Converting files in ${task}${formats[${REPLY}]}${b}...${nb}${nc}"
                __
                if [[ -n $(command -v parallel) && $use_parallel = yes ]]; then
                    printf '%s\n' "${task}"' Parallel conversion enabled.'"${nc}"
                    _"${formats[${REPLY}]}" -p
                else
                    printf '%s\n' "${task}"' Parallel conversion disabled.'"${nc}"
                    _"${formats[${REPLY}]}" -n
                fi
            ;;
            *)  __; printf '%s\n' " ${critical}Wrong format or conversion aborted...${nc}"
                sleep 3
                clear
            ;;
        esac
        
    fi

    find . -iname "*.webm" -exec rm {} \;

    if [[ -z $(find "$audios_dir" -maxdepth 2 -name "*.webm" ) ]]; then
        __
        printf '%s\n' " ${info}Conversion done.${nc}"
        sleep 2
        clear
    else
        echo ""
    fi

}