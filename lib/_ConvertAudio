#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2034,SC2154,SC2164,SC2015,SC1083
_ConvertAudio() {

    local webmFiles
    [[ -d "$audios_dir"/"${list%.*}" ]] \
    && cd "$audios_dir"/"${list%.*}" \
    || cd "$audios_dir"

    # because webmFiles is local child functions will inherite its value.
    mapfile -t webmFiles < <(find "$audios_dir" -maxdepth 2 -iname "*.webm")
    
    if [[ -n $default_conversion_format ]]; then
        __
        printf '%s\n' \
        " ${info}Conversion format set to $default_conversion_format."
        __
        printf '%s\n' \
        " Converting files in ${task}${b}$default_conversion_format...${nb}"
        __
        if [[ -n $(command -v parallel) && $use_parallel = yes ]]; then
            printf '%s\n' " Parallel conversion enabled."
            parallel --delay 2.5 -j+0 --bar \
            ffmpeg \
                -hide_banner -loglevel error \
                -y -i {} -qscale:a 0 {.}."$default_conversion_format" ::: ./*.webm
            rm -rf "$HOME"/.parallel
        else
            printf '%s\n' " Parallel conversion disabled.${nc}"
            _ConvertAudio_"$default_conversion_format"
        fi
    else
        __
        printf '%s\n' " ${critical}Conversion format isn't set..." \
        " ${info}Press Enter to abort conversion.${nc}"
        declare -A formats=(
            [1]="aac"
            [2]="flac"
            [3]="mp3"
            [4]="ogg"
            [5]="wav"
        )
        __
        read -rn1 \
        -p " ${info}Select an output format [1=aac] [2=flac] [3=mp3] [4=ogg] [5=wav]: ${nc}"
        
        case "$REPLY" in
            [1-5])
                __
                printf '%s\n' \
                " ${info}Converting files in ${task}${b}${formats[${REPLY}]}...${nb}"
                __
                if [[ -n $(command -v parallel) && $use_parallel = yes ]]; then
                    printf '%s\n' " Parallel conversion enabled."
                    parallel --delay 2.5 -j+0 --bar \
                    ffmpeg \
                        -hide_banner -loglevel error \
                        -y -i {} -qscale:a 0 {.}."${formats[${REPLY}]}" ::: ./*.webm
                    rm -rf "$HOME"/.parallel
                else
                    printf '%s\n' " Parallel conversion disabled.${nc}"
                    _ConvertAudio_"${formats[${REPLY}]}"
                fi
            ;;
            *)
                __
                find "$audios_dir" -maxdepth 2 -name "*.webm" >/dev/null && {
                    mv ./*.webm "$MUSIC_DIR"
                    printf '%s\n' " ${critical}Conversion aborted," \
                    " All .webm files have been moved in $MUSIC_DIR.${nc}"
                    sleep 3
                } || printf '%s\n' " ${critical}Wrong format $REPLY...${nc}"
                __
                sleep 2
                return
            ;;
        esac
        
    fi

    find . -iname "*.webm" -exec rm {} \; && \
    __ && printf '%s\n' " ${info}Conversion done.${nc}" \
    && sleep 2
}