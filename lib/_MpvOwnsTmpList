#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_MpvOwnsTmpList() {

    local downloadTmpList sedPrint titles

    _PidOfMpv >/dev/null && {

        [[ -f $NOWPLAYING || -L $NOWPLAYING ]] && {

            sedPrint=$(sed -n '1p' "$NOWPLAYING")

            case "$1" in
                --collection)
                    if [[ -f "$SELECTED_URLS1" ]]; then
                        name="another"
                        action="if you want to play $name collection playlist,"
                    elif [[ $m3uFile == *.m3u ]]; then
                        name="a"
                        action="if you want to play $name collection playlist,"
                    else
                        return
                    fi
                ;;
                --default)
                    if [[ $sedPrint == default.m3u ]]; then
                        name="default"
                        action="if you want to play/remove/save the $name list,"
                        downloadTmpList=default
                    else
                        return
                    fi
                ;;
                --list)
                    if [[ $sedPrint =~ temporary"$Type"Urls.m3u && $quit == yes ]]; then
                        printf '%s\n' " ${critical}Temporary $Type list is owned by mpv,"
                        _Prompt -n " and it isn't saved, quit anyway? ${nc}" && {
                            _MpvControl -q
                            exit
                        }
                        quit=no; _Menu
                    elif [[ $sedPrint =~ temporary"$Type"Urls.m3u ]]; then
                        name="$Type"
                        action="if you want to add links/play/remove/save the $name list,"
                        downloadTmpList=list
                    else
                        return
                    fi
                ;;
                --local)
                    if [[ $localPlaylist == yes || $sedPrint =~ $HOME ]]; then
                        name="a local"
                        action="if you want to queue $name directory/file(s),"
                    elif [[ -f "$SELECTED_URLS1" || $m3uFile == *.m3u ]]; then
                        name="another"
                        action="if you want to queue a directory/file(s),"
                    else
                        return
                    fi
                ;;
            esac

            printf '%s\n' " ${critical}mpv owns $name playlist..." \
            " $action" \
            " just quit mpv first to proceed.${nc}"
            __
            if [[ $downloadTmpList =~ default|list ]]; then
                read -rsn 1 \
                -p " ${info}[A]bort, [D]ownload tmp list, [Q]uit mpv: ${nc}" \
                mpvOwnsTmpListOptions
            else
                read -rsn 1 \
                -p " ${info}[A]bort, [Q]uit mpv: ${nc}" mpvOwnsTmpListOptions
            fi

            case "$mpvOwnsTmpListOptions" in
                a|A) _Menu ;;
                d|D)
                    if [[ $name == default ]]; then
                        _ViewAudioVideoUrlsInfo -d
                    elif [[ $name == "$Type" ]]; then
                        _ViewAudioVideoUrlsInfo "$arg"
                    fi
                ;;
                q|Q)
                    kill -SIGTERM "$(_PidOfMpv)" 2>/dev/null
                    localPlaylist=no
                    _RemoveMpvTmp && return
                ;;
                *) _WrongOption "$mpvOwnsTmpListOptions" && _Menu ;;
            esac
        }
        # [[ -f $pidofMpv ]] && _StartUp
    }

}
