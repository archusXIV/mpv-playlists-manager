#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_MpvOwnsTmpList() {

    cd "$tmp_dir" || return
    local downloadTmpList

    _PidOfMpv >/dev/null && {

        [[ -f $NOWPLAYING || -L $NOWPLAYING || -f $pidofMpv ]] && {

            case "$1" in
                --clear-tmp)
                    if [[ -f "$DEFAULT_TITLES"_ || $playerTitlesList == "$TITLES"_ ]]; then
                        name="a temporary"
                    else
                        return
                    fi
                ;;
                --collection)
                    if [[ -f $playerTitlesList || -f list_tmp ]]; then
                        name="$playerTitlesList"
                        name="${name##*/}"
                        name="${name//.titles}"
                    elif [[ -f playerIndexesList ]]; then
                        name="another"
                    else
                        return
                    fi
                ;;
                --default)
                    case "$2" in
                        --download|--edit|--remove|--save)
                            if [[ -f "$DEFAULT_TITLES"_ ]]; then
                                name="default"
                                downloadTmpList="default"
                            else
                                return
                            fi
                        ;;
                        --play)
                            if [[ -f "$DEFAULT_TITLES"_ ]]; then
                                name="default"
                                downloadTmpList="default"
                            elif [[ -f playerIndexesList ]]; then
                                name="another"
                            fi
                        ;;
                    esac
                ;;
                --list)
                    case "$2" in
                        --download|--edit|--quit|--remove|--save|--search)
                            if [[ $playerTitlesList == "$TITLES"_ ]]; then
                                name="Temporary $Type"
                                downloadTmpList="list"
                            else
                                return
                            fi
                        ;;
                        --play)
                            if [[ $playerTitlesList == "$TITLES"_ ]]; then
                                name="Temporary $Type"
                                downloadTmpList="list"
                            elif [[ -f playerIndexesList ]]; then
                                name="another"
                            else
                                return
                            fi
                        ;;
                    esac
                ;;
                --local)
                    if [[ -f singleDirTitles \
                        || -f multipleDirsTitles.m3u \
                        || -f multipleFilesTitles ]]; then
                        name="a local"
                    elif [[ -f playerIndexesList ]]; then
                        name="another"
                    else
                        return
                    fi
                ;;
            esac

            printf '\n%s\n' " ${critical}mpv owns $name playlist..."

            _BlankLine
            if [[ $downloadTmpList =~ default|list ]]; then
                read -rsn 1 \
                -p " ${info}[${mtitle}C${info}]ancel, [D]ownload ${Type} list, [Q]uit mpv: ${nc}" \
                mpvOwnsTmpListOptions
            else
                read -rsn 1 \
                -p " ${info}[${mtitle}C${info}]ancel, [Q]uit mpv: ${nc}" mpvOwnsTmpListOptions
            fi

            case "$mpvOwnsTmpListOptions" in
                [cC])
                    unset downloadTmpList
                    _Menu
                ;;
                [dD])
                    if [[ $name == default ]]; then
                        _ViewAudioVideoUrlsInfo -d
                    elif [[ $Type == Audio ]]; then
                        _GetAudio -a
                    else
                        _GetVideo -v
                    fi
                ;;
                [qQ])
                    unset downloadTmpList
                    _killMpv
                    localPlaylist="no"
                    _Menu
                ;;
                *)
                    _WrongOption "$mpvOwnsTmpListOptions"
                    _Menu
                ;;
            esac

        }

    }

}
