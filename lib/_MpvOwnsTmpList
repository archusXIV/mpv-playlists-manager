#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_MpvOwnsTmpList() {

    cd "$tmp_dir" || return
    local downloadTmpList

    _PidOfMpv >/dev/null && {

        [[ -f $NOWPLAYING || -L $NOWPLAYING || -f $pidofMpv ]] && {

            case "$1" in
                --clear-tmp)
                    if [[ -f "$DEFAULT_TITLES"_ || $playerTitlesList == "$TITLES"_ ]]; then
                        name="a temporary"
                    else
                        return
                    fi
                ;;
                --collection)
                    if [[ -f $playerTitlesList || -f "$tmp_dir"/list_tmp ]]; then
                        name="$playerTitlesList"
                        name="${name##*/}"
                        name="${name//.titles}"
                    else
                        return
                    fi
                ;;
                --default)
                    if [[ -f "$DEFAULT_TITLES"_ ]]; then
                        name="default"
                        downloadTmpList="default"
                    elif [[ -f playerIndexesList ]]; then
                        name="another"
                    else
                        return
                    fi
                ;;
                --list)
                    if [[ $playerTitlesList == "$TITLES"_ ]]; then
                        name="Temporary $Type"
                        downloadTmpList="list"
                    elif [[ -f playerIndexesList ]]; then
                        name="another"
                    else
                        return
                    fi
                ;;
                --local)
                    if [[ -f $tmp_dir/singleDirTitles \
                    || -f $tmp_dir/multipleDirsTitles.m3u \
                    || -f $tmp_dir/multipleFilesTitles ]]; then
                        name="a local"
                    elif [[ -f playerIndexesList ]]; then
                        name="another"
                    else
                        return
                    fi
                ;;
            esac

            printf '\n%s\n' " ${critical}mpv owns $name playlist..."

            _BlankLine
            if [[ $downloadTmpList =~ default|list ]]; then
                read -rsn 1 \
                -p " ${info}[C]ancel, [D]ownload ${Type} list, [Q]uit mpv: ${nc}" \
                mpvOwnsTmpListOptions
            else
                read -rsn 1 \
                -p " ${info}[${mtitle}C${info}]ancel, [Q]uit mpv: ${nc}" mpvOwnsTmpListOptions
            fi

            case "$mpvOwnsTmpListOptions" in
                c|C)
                    [[ -n $downloadTmpList ]] && unset downloadTmpList
                    _Menu
                ;;
                d|D)
                    if [[ $name == default ]]; then
                        _ViewAudioVideoUrlsInfo -d
                    elif [[ $name == "$Type" ]]; then
                        _ViewAudioVideoUrlsInfo "$arg"
                    fi
                ;;
                q|Q)
                    [[ -n $downloadTmpList ]] && unset downloadTmpList
                    kill -SIGTERM "$(_PidOfMpv)" 2>/dev/null
                    localPlaylist=no
                    _Menu
                ;;
                *) _WrongOption "$mpvOwnsTmpListOptions" && _Menu ;;
            esac

        }

    }

}
