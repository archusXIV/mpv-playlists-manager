#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_ViewDefaultUrlsInfo() {

    local file Type
    file="${DEFAULT_LIST##*/}" file="${file%%.*}"
    Type=default

    __getAudioVideo() {
        __
        read -rsn 1 \
        -p "${info} Download [A]udio, [V]ideo, [${mtitle}C${info}]ancel: ${nc}" get
        case "$get" in
            a|A) __; _GetAudio -d ;;
            v|V) __; _GetVideo -d ;;
            *  ) _ViewAudioVideoUrlsInfo -d ;;
        esac
    }

    if [[ $(_GetLinesList -d) -gt 0 ]]; then
        rm "$tmp_dir"/1 2>/dev/null

        [[ $(grep "" -c "$DEFAULT_TITLES" 2>/dev/null) -ne $(_GetLinesList -d) ]] && {
            printf '%s\n' " ${critical}Default list as been modified," \
            " ${task}${b}Updating Default list titles...${nb}${nc}"
            _GetMediaTitle -d
        }
        clear

        while true; do
            menuTitleType=DEFAULT
            URLS="$DEFAULT_LIST"
            TITLES="$DEFAULT_TITLES"
            __
            __listHeader
            read -rsn 1 viewDefaultUrlsInfOptions
            case "$viewDefaultUrlsInfOptions" in
                d|D)
                    if [[ $downloadTmpList == default || -f $pidofMpv ]]; then
                        __getAudioVideo
                    else
                        _MpvOwnsTmpList --default || __getAudioVideo
                    fi
                ;;
                m|M) break ;;
                p|P)
                    if [[ -f $pidofMpv ]]; then
                        _StartUp
                    else
                        _MpvOwnsTmpList --default || \
                        __
                        read -rsn 1 \
                        -p "${info}"' Play [A]udio, [V]ideo?: '"${nc}" play
                        case "$play" in
                            a|A) _LoadAudioVideo -da ;;
                            v|V) _LoadAudioVideo -dv ;;
                            *)
                                _WrongOption "$play"
                                break
                            ;;
                        esac
                    fi
                ;;
                r|R)
                    if [[ -f $pidofMpv ]]; then
                        _Remove -d
                    else
                        _MpvOwnsTmpList --default || _Remove -d
                    fi
                ;;
                s|S)
                    if [[ -f $pidofMpv && -f $DEFAULT_TITLES ]]; then
                        _Save -d
                    elif [[ -f $DEFAULT_TITLES ]]; then
                        _MpvOwnsTmpList --default || _Save -d
                    else
                        printf '%s\n' " ${critical}Default list does not exist," \
                        " ${task}${b}Updating Default list titles...${nb}${nc}"
                        _GetMediaTitle -d
                        nl < "$DEFAULT_TITLES"
                        _Save -d
                    fi
                ;;
                *)
                    _WrongOption "$viewDefaultUrlsInfOptions"
                    break
                ;;
            esac
        done
    else
        echo " ${critical}There is nothing to do, Default playlist is empty...${nc}"
        sleep 3
    fi
}
