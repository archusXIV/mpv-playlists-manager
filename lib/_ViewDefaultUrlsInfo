#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_ViewDefaultUrlsInfo() {
    
    local file Type
    file="${QUEUE##*/}" file="${file%%.*}"
    Type=default

    if (($(_GetLinesList -q) > 0)); then
        rm "$tmp_dir"/1 2>/dev/null
        
        [[ $(grep "" -c "$DEFAULTITLES" 2>/dev/null) -ne $(_GetLinesList -q) ]] && {
            printf '%s\n' " ${critical}Default list as been modified," \
            " ${task}${b}Updating Default list titles...${nb}${nc}"
            _GetMediaTitle -q
        }
        clear
        
        while [[ -f $QUEUE ]]; do
            menuTitleType=DEFAULT
            URLS="$QUEUE"
            TITLES="$DEFAULTITLES"
            __
            __listHeader
            read -rsn 1 viewUrlInfoDefaultOptions
            case "$viewUrlInfoDefaultOptions" in
                d|D)
                    _MpvOwnsTmpList --default || \
                    __
                    read -rsn 1 -p "${info} Download [A]udio, [V]ideo, [${mtitle}C${info}]ancel: ${nc}" get
                    case "$get" in
                        a|A) __; _GetAudio -q ;;
                        v|V) __; _GetVideo -q ;;
                        *) _ViewAudioVideoUrlsInfo -q ;;
                    esac
                ;;
                m|M) _Menu ;;
                p|P)
                    _MpvOwnsTmpList --default || \
                    __
                    read -rsn 1 -p "${info}"' Play [A]udio, [V]ideo?: '"${nc}" play
                    case "$play" in
                        a|A) _LoadAudioVideo -qa ;;
                        v|V) _LoadAudioVideo -qv ;;
                        *)
                            _WrongOption "$play"
                            return
                        ;;
                    esac
                ;;
                r|R)
                    _MpvOwnsTmpList --default || _Remove -q
                ;;
                s|S)
                    _MpvOwnsTmpList --default || \
                    if [[ -f $DEFAULTITLES ]]; then
                        _Save -q
                    else
                        printf '%s\n' " ${critical}Default list does not exist," \
                        " ${task}${b}Updating Default list titles...${nb}${nc}"
                        _GetMediaTitle -q
                        nl < "$DEFAULTITLES"
                        _Save -q
                    fi
                ;;
                *)
                    _WrongOption "$viewUrlInfoDefaultOptions"
                    return
                ;;
            esac
        done
    else
        echo " ${critical}There is nothing to do, Default playlist is empty...${nc}"
        sleep 3
    fi
}
