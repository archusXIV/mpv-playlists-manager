#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_ViewDefaultUrlsInfo() {

    local file Type playerTitlesList
    file="${DEFAULT_LIST##*/}" file="${file%%.*}"
    Type=default

    _ResizeWindow --main

    __getAudioVideo() {

        _BlankLine
        read -rsn 1 \
        -p "${info} Download [A]udio, [V]ideo, [${mtitle}C${info}]ancel: ${nc}" get
        case "$get" in
            a|A) _BlankLine; _GetAudio -d ;;
            v|V) _BlankLine; _GetVideo -d ;;
            *  ) return 1 ;;
        esac

    }

    if [[ $(_GetLinesList -d) -gt 0 ]]; then
        rm "$tmp_dir"/1 2>/dev/null

        [[ $(grep "" -c "$DEFAULT_TITLES" 2>/dev/null) -ne $(_GetLinesList -d) ]] && {
            printf '%s\n' " ${critical}Default list as been modified," \
            " ${task}${b}Updating Default list titles...${nb}${nc}"
            _GetMediaTitle --default
        }
        clear

        while true; do
            menuTitleType=DEFAULT
            URLS="$DEFAULT_LIST"
            TITLES="$DEFAULT_TITLES"
            _BlankLine
            __listHeader # is in _ViewAudioVideoUrlsInfo
            read -rsn 1 viewDefaultUrlsInfOptions
            case "$viewDefaultUrlsInfOptions" in
                d|D)
                    if [[ $downloadTmpList == default || -f $pidofMpv ]]; then
                        __getAudioVideo || continue
                    else
                        _MpvOwnsTmpList --default --download || __getAudioVideo || continue
                    fi
                ;;
                e|E) _MpvOwnsTmpList --default --edit || _EditTmpListTitles ;;
                m|M) break ;;
                p|P)
                    if [[ -f $pidofMpv ]]; then
                        _StartUp
                    else
                        _MpvOwnsTmpList --default --play || {
                            _BlankLine
                            read -rsn 1 \
                            -p "${info}"' Play [A]udio, [V]ideo?: '"${nc}" play
                            case "$play" in
                                a|A|v|V)
                                    cp "$DEFAULT_TITLES" "$DEFAULT_TITLES"_
                                    playerTitlesList="$DEFAULT_TITLES"_
                                    _Has fzf && [[ $mpvc_tui == native ]] \
                                     && _MakeMpvPlaylistIndexes
                                    if [[ $play =~ a|A ]]; then
                                        _LoadAudioVideo -da
                                    else
                                        _LoadAudioVideo -dv
                                    fi
                                ;;
                                *)
                                    _WrongOption "$play"
                                    continue
                                ;;
                            esac
                        }
                    fi
                ;;
                r|R)
                    if [[ -f $pidofMpv ]]; then
                        _Remove -d
                    else
                        _MpvOwnsTmpList --default --remove || _Remove -d
                    fi
                ;;
                s|S)
                    if [[ -f $pidofMpv && -f $DEFAULT_TITLES ]]; then
                        _Save -d
                    elif [[ -f $DEFAULT_TITLES ]]; then
                        _MpvOwnsTmpList --default --save || _Save -d
                    else
                        printf '%s\n' " ${critical}Default list does not exist," \
                        " ${task}${b}Updating Default list titles...${nb}${nc}"
                        _GetMediaTitle --default
                        nl "$DEFAULT_TITLES"
                        _Save -d
                    fi
                ;;
                *)
                    _WrongOption "$viewDefaultUrlsInfOptions"
                    break
                ;;
            esac
        done
    else
        printf '%s\n' " ${critical}There is nothing to do, Default playlist is empty...${nc}"
        sleep 3
    fi

}
