#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2076
_SearchOnlineWithYtfzf() {
    __
    read -rp \
    " ${info}Search ${platform} for ${Type} links (Use quotes for multiple search terms): ${nc}" \
    request

    [[ -z $request ]] && return

    local ytpl peer lbry

    case "$1" in
        -o)
            ytfzf --show-thumbnails \
            -I VJ -c odysee "${ytfzfOptions_X[@]}" "$request$*" >> "$YTFZFJSON"
        ;;
        -p)
            ytfzf --show-thumbnails \
            -I VJ -c peertube "${ytfzfOptions_X[@]}" "$request$*" >> "$YTFZFJSON"
        ;;
        -y)
            ytfzf --show-thumbnails \
            -I VJ -c youtube "${ytfzfOptions_X[@]}" "$request$*" >> "$YTFZFJSON" || \
            invidious_instance="https://vid.puffyan.us" ytfzf --show-thumbnails \
            -I VJ -c youtube "${ytfzfOptions_X[@]}" "$request$*" >> "$YTFZFJSON"
        ;;
    esac

    clear
    test ! -s "$YTFZFJSON" && {
        rm "$YTFZFJSON"
        return
    }

    jq --raw-output '.[].url' "$YTFZFJSON" | tee -a "$DEFAULT_LIST" >> "$URLS"
    jq --raw-output '.[].title' "$YTFZFJSON" | tee -a "$DEFAULT_TITLES" >> "$TITLES"
    _RemoveCrap

    cat "$DEFAULT_LIST" "$URLS" > "$tmp_dir"/ytfzf_playlists

    ytpl="playlist?list="
    peer="peertube.tv/w/p/"
    lbry="odysee.com/$/playlist/"
    
    while read -r line; do
        [[ $line =~ "$ytpl"|"$peer"|"$lbry" ]] && \
            echo "$line" >> "$YTSEARCH"
    done < "$tmp_dir"/ytfzf_playlists

    perl -i -ne 'print if ! $a{$_}++' "$YTSEARCH" 2>/dev/null
    __; printf '%s\n' " ${info}Links added to $Type list${nc}"
    sleep 2; clear
    rm {"$YTFZFJSON","$tmp_dir"/ytfzf_playlists}

}
