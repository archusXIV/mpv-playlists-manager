#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2013,SC2154,SC2143,SC2164,SC2317
_GetAudio() {

    cd "$audios_dir" || exit 1
    local M3UFILE TITLES

    case "$1" in
        -a)
            [[ $(_GetLinesList -a) -eq 0 ]] && {
                printf '%s\n' " ${critical}No links in the list${nc}"
                sleep 2
                _CopyAudio
            }
            M3UFILE="$AUDIO_URLS"
            TITLES="$AUDIO_TITLES"
        ;;
        -l)
            M3UFILE="$playlists_dir"/"$list"
            TITLES="$titles_dir"/"$list".titles
            mkdir -p "$audios_dir"/"${list%.*}"
        ;;
        -q)
            if [[ ! -f $DEFAULTITLES && \
                -f $DEFAULTM3UTITLES ]]; then
                cat "$DEFAULTM3UTITLES" > \
                "$DEFAULTITLES"
            elif [[ -f $DEFAULTITLES ]]; then
                printf '%s\n' " ${info}Fetching titles file...${nc}"
                sleep 1
            else
                printf '%s\n' " ${info}Getting titles...${nc}"
                _GetMediaTitle -q > "$DEFAULTITLES"
                clear
            fi
            M3UFILE="$QUEUE"
            TITLES="$DEFAULTITLES"
        ;;
    esac

    cp -f "$M3UFILE" "$M3UFILE"_origin
    cp -f "$TITLES" "$TITLES"_origin
    clear

    __GetAudioDownloadMessages() (

        [[ $M3UFILE = "$AUDIO_URLS" ]] && {
            printf '%s\n' " ${info}$(_GetLinesList -a) audio file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -a)${nc}"
        }

        [[ $M3UFILE = "$playlists_dir"/"$list" ]] && {
            printf '%s\n' " ${info}$(_GetLinesList -l) audio file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -l)${nc}"
        }

        [[ $M3UFILE = "$QUEUE" ]] && {
            printf '%s\n' " ${info}$(_GetLinesList -q) audio file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -q)${nc}"
        }

    )

    [[ -d "$audios_dir"/"${list%.*}" ]] && cd "$audios_dir"/"${list%.*}"

    _GetAudioDownload

    echo -e " ${info}Done\n${nc}"

    if [[ -n $(find . -iname "*.webm") ]]; then

        echo " ${critical}ADVISORY: if you choose conversion, all downloaded files (.webm)"
        echo -e " will be converted in the chosen format.${nc}\n"
        find . -iname "*.webm" | sort -d | sed 's,.*/,,'

        if [[ $automatic_audio_conversion = yes ]]; then
            __
            printf '%s\n' " ${task}Automatic audio conversion enabled.${nc}"
            sleep 2
            [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
            && _ConvertAudio && _GetCompleted -a
            [[ $M3UFILE = "$playlists_dir"/"$list" ]] \
            && _ConvertAudio && _DownloadCompleted
        else
            __
            _Prompt " ${info}Do you wish to convert them?: ${nc}" || {
                [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
                && _GetCompleted -a
                [[ $M3UFILE = "$playlists_dir"/"$list" ]] && _DownloadCompleted
            }
            [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
            && _ConvertAudio && _GetCompleted -a
            [[ $M3UFILE = "$playlists_dir"/"$list" ]] \
            && _ConvertAudio && _DownloadCompleted
        fi

    else
        [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
        && _GetCompleted -a
        [[ $M3UFILE = "$playlists_dir"/"$list" ]] && _DownloadCompleted
    fi

}
