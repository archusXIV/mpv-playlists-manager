#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2013,SC2154,SC2143,SC2164
_GetAudio() {

    cd "$audios_dir" || exit 1
    local getAudioCounter M3UFILE TITLES

    case "$1" in
        -a)
            [[ $(_GetLinesList -a) -eq 0 ]] && {
                printf '%s\n' " ${critical}No links in the list${nc}"
                sleep 2
                _CopyAudio
            }
            M3UFILE="$AUDIO_URLS"
            TITLES="$AUDIO_TITLES"
        ;;
        -l)
            M3UFILE="$playlists_dir"/"$list"
            TITLES="$titles_dir"/"$list".titles
            mkdir -p "$audios_dir"/"${list%.*}"
        ;;
        -q)
            if [[ ! -f "$tmp_dir"/DefaultTitles && \
                -f "$titles_dir"/default.m3u.titles ]]; then
                cat "$titles_dir"/default.m3u.titles > \
                "$tmp_dir"/DefaultTitles
            elif [[ -f "$tmp_dir"/DefaultTitles ]]; then
                printf '%s\n' " ${info}Fetching titles file...${nc}"
                sleep 1
            else
                printf '%s\n' " ${info}Getting titles...${nc}"
                _GetMediaTitle -q > "$tmp_dir"/DefaultTitles
                clear
            fi
            M3UFILE="$QUEUE"
            TITLES="$tmp_dir"/DefaultTitles
        ;;
    esac

    cp -f "$M3UFILE" "$M3UFILE"_origin
    cp -f "$TITLES" "$TITLES"_origin
    clear
    
    getAudioCounter=$(grep -c '^https' "$M3UFILE")

    __GetAudioDownloadMessages() (
    
        [[ $M3UFILE = "$AUDIO_URLS" ]] && {
            printf '%s\n' " ${info}$getAudioCounter audio file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -a).webm${nc}"
        }
        
        [[ $M3UFILE = "$playlists_dir"/"$list" ]] && {
            printf '%s\n' " ${info}$getAudioCounter audio file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -l).webm${nc}"
        }
        
        [[ $M3UFILE = "$QUEUE" ]] && {
            printf '%s\n' " ${info}$getAudioCounter audio file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -q).webm${nc}"
        }

    )
    
    [[ -d "$audios_dir"/"${list%.*}" ]] && cd "$audios_dir"/"${list%.*}"

    for getAudioUrl in $(grep '^https' "$M3UFILE"); do

        if [[ $(youtube-dl -F "${ytdlPreset_DW[@]}" "$getAudioUrl" \
            | sed -n '/audio only/p' | grep -w '251') ]]; then

            __
            __GetAudioDownloadMessages
            youtube-dl \
            -o "$(youtube-dl \
            --skip-download \
            --get-title "$getAudioUrl")".webm \
            -f 251 \
            "${ytdlPreset_NC[@]}" "$getAudioUrl"

        else

            youtube-dl -F "${ytdlPreset_DW[@]}" "$getAudioUrl" \
            | sed -n '/audio only/p'
            __
            printf '%s\n' " ${info}Choose a format code: ${nc}"
            read -r code
            clear
            __
            __GetAudioDownloadMessages
            youtube-dl -f "$code" \
            "${ytdlPreset_NC[@]}" "$getAudioUrl"
            
        fi

        if [[ $M3UFILE = "$AUDIO_URLS" ]]; then
            sed -i '1d' {"$M3UFILE","$TITLES"}
        else
            sed -i '2d' "$M3UFILE"
            sed -i '1d' "$TITLES"
        fi

        ((getAudioCounter--))
        clear

    done

    echo -e " ${info}Done\n${nc}"

    if [[ -n $(find . -iname "*.webm") ]]; then

        echo " ${critical}ADVISORY: if you choose conversion, all downloaded files (.webm)"
        echo -e " will be converted in the chosen format.${nc}\n"
        find . -iname "*.webm" | sort -d | sed 's,.*/,,'

        if [[ $automatic_audio_conversion = yes ]]; then

            __
            printf '%s\n' " ${task}Automatic audio conversion enabled.${nc}"
            sleep 2
            [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
            && _ConvertAudio && _GetCompleted -a
            [[ $M3UFILE = "$playlists_dir"/"$list" ]] \
            && _ConvertAudio && _DownloadCompleted

        else

            __
            _Prompt " ${info}Do you wish to convert them?: ${nc}" || {
                [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
                && _GetCompleted -a
                [[ $M3UFILE = "$playlists_dir"/"$list" ]] && _DownloadCompleted
            }
            [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
            && _ConvertAudio && _GetCompleted -a
            [[ $M3UFILE = "$playlists_dir"/"$list" ]] \
            && _ConvertAudio && _DownloadCompleted

        fi

    else

        [[ $M3UFILE = "$AUDIO_URLS" ]] || [[ $M3UFILE = "$QUEUE" ]] \
        && _GetCompleted -a
        [[ $M3UFILE = "$playlists_dir"/"$list" ]] && _DownloadCompleted

    fi

}