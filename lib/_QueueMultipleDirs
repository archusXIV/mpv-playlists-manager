#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_QueueMultipleDirs() {

    clear

    cd "$localDir" || exit 1

    local mpv_list dirlist localDirPath localPlaylist

    mpv_list="$localDir/dirlist.m3u"
    dirlist="$tmp_dir/dirlist"
    localDirPath=$(pwd | sed 's,/,\\/,g')
    localPlaylist=yes

    find "$localDir" -maxdepth 1 -type d -empty -printf '%f\n' | sort >> "$tmp_dir"/empty.tmp

    if [[ -s $tmp_dir/empty.tmp ]]; then
        # empty dirs will be banned from our list through grep filter
        find "$localDir" -maxdepth 1 -type d -not -empty -printf '%f\n' \
        | sort | sed '/^\s*$/d' \
        | grep -vF "$(grep '^[[:print:]]' "$tmp_dir"/empty.tmp)" > "$dirlist"
    else
        find "$localDir" -maxdepth 1 -type d -printf '%f\n' \
        | sort | sed '/^\s*$/d' > "$dirlist"
    fi

    rm "$tmp_dir"/{dirlist,empty}.tmp 2>/dev/null
    printf '\n%s\n' " ${info}Directories in ${localDir##*/}: ${nc}"
    _BlankLine; nl "$dirlist"; _BlankLine

    IFS=", "; read -ra selected_dirs -p "$RANGEPROMPT"
    for dirRange in "${selected_dirs[@]}"; do
        IFS="-"; read -r start end <<< "$dirRange"

        [[ $dirRange =~ [[:alpha:]] ]] && {
            unset IFS dirRange
            rm "$dirlist"
            printf '\n%s\n' " ${critical}Selection aborted.${nc}"
            sleep 2
            return
        }

        [[ -z $start ]] && continue
        [[ -z $end ]] && end="$start"

        for ((i=start;i<=end;i++)); do
            sed -n "${i}p" "$dirlist" >> "$mpv_list"
        done

    done

    unset IFS dirRange
    rm "$dirlist"

    sed -i "s/^/${localDirPath}\//;s,$,/," "$mpv_list"
    use_mpvc_locally=yes

    __makeMultipleDirsPlaylist() (

        mapfile -t dirsArray < "$mpv_list"
        int=0

        for dir in "${dirsArray[@]}"; do
            ((int++))
            find "$dir" -maxdepth 1 -type f \
            | sort | sed 's/^//' \
            >> "$tmp_dir"/dirnumber_"$int"
        done

        unset dir

        ints=("$tmp_dir"/*dirnumber_*)
        [[ -f $playerTitlesList ]] && rm "$playerTitlesList"

        for ((i=1;i<="${#ints[@]}";i++)); do
            cat "$tmp_dir"/dirnumber_"${i}" >> "$playerTitlesList"
        done

        rm "$tmp_dir"/dirnumber_*
    )

    if [[ $localMediaType == audio ]]; then
        # use_mpvc is set to no
        mv -f "$mpv_list" "$LOCALDIRS_LIST"
        _LoadAudioVideo -xa
    elif [[ $localMediaType == video ]]; then
        mv -f "$mpv_list" "$LOCALDIRS_LIST"
        _LoadAudioVideo -xv
    else
        playerTitlesList="$tmp_dir/multipleDirsTitles.m3u"
        m3uFile="$playerTitlesList"
        __makeMultipleDirsPlaylist
        _MakeMpvPlaylistIndexes
        ln -sfr "$m3uFile" "$NOWPLAYING"
        _MakeMpvPlaylist --local-dirs
    fi

    _Menu

}
