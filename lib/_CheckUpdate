#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_CheckUpdate() {

    local newVerion
    newVerion=$(curl -sL "$MPM_VERSION")

    case "$1" in
        --manually)
            clear
            __upgrade() {
                _Prompt " ${info}Would you like to update ${0##*/} now?: ${nc}" || {
                    printf '%s\n' " ${info}Update skipped.${nc}"
                    return
                }
                printf '%s\n' " ${info}Checking for new version..." \
                    " ${0##*/} $VERSION -> $newVerion${nc}"
                sleep 1
                _BlankLine
                _Has git || {
                    printf '%s\n' " ${critical}git is not installed!...exiting.${nc}"
                    exit 1
                }
                git clone "$MPM_GIT"
                cd ./mpv-playlists-manager || exit 1
                _BlankLine
                printf '%s\n' \
                " ${info}You can now run the installation script (sudo ./install.sh)," \
                " or use the Makefile (sudo make upgrade && make diff-config)${nc}"
                exit 0
            }
            if [[ $check_updates == no ]] && [[ $newVerion != "$VERSION" ]]; then
                __upgrade
            else
                [[ $newVerion != "$VERSION" ]] && __upgrade
                printf '\n%s\n' " ${info}${0##*/} is up to date.${nc}"
                sleep 1
            fi
        ;;
    esac

    [[ $check_updates == yes ]] && {
        [[ $newVerion != "$VERSION" ]] &&
            printf '%s\n' " ${critical}${b}$newVerion available${nb}${nc}"
    }

}
