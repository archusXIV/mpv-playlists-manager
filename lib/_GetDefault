#!/bin/bash
## This is a part of main script: mpm.

_GetDefault() {
    case "$1" in
        -a) echo " ${g}Getting titles...${nc}"
            _GetMediaTitle -q > "$tmp_dir"/DefaultAudio.txt
            cd "$audios_dir"
            cp -f "$QUEUE" "$QUEUE"_origin 2>/dev/null

            for url in $(grep '^https' "$QUEUE"); do
                __
                echo -e " ${g}Codes for: $(sed -n '1p' "$tmp_dir"/DefaultAudio.txt).${nc}\n"
                youtube-dl -F --no-warnings "$url" | sed -n '1,4d;5,6p;/audio only/p' 2>/dev/null
                __
                echo " ${g}Choose a format code: ${nc}"
                read -r code

                clear

                if (( $(_GetLinesList -q) < 2 )); then
                    __
                    echo " ${g}There is $(_GetLinesList -q) audio file left to download.${nc}"
                else
                    __
                    echo " ${g}There are $(_GetLinesList -q) audio files left to download.${nc}"
                fi

                echo " ${g}Please be patient while downloading..."
                echo -e " ${r}$(sed -n '1p' "$tmp_dir"/DefaultAudio.txt).${nc}\n"
                youtube-dl -f "$code" --no-warnings --progress "$url"
                sed -i '2d' "$QUEUE"; sed -i '1d' "$tmp_dir"/DefaultAudio.txt
                clear

            done

            echo -e " ${g}Done\n${nc}"

            if [[ -n $(find . -iname "*.webm") ]]; then
                echo -e " ${r}Advisory: IF YOU CHOOSE CONVERSION, ALL FILES WILL BE IN THE CHOSEN FORMAT.${nc}\n"
                find . -iname "*.webm" | sed 's,.*/,,'
                __
                echo -e " ${g}Do you wish to convert them? [Y/n]: ${nc}\n"
                read -rsn 1 answer
                case "$answer" in
                    Y|y)    _ConvertAudio ;;
                    n|N)    _GetCompleted -a ;;
                esac
                _GetCompleted -a
            else
                _GetCompleted -a
            fi
        ;;
        -v) echo " ${g}Getting titles...${nc}"
            _GetMediaTitle -q > "$tmp_dir"/DefaultVideo.txt
            cd "$videos_dir"
            cp -f "$QUEUE" "$QUEUE"_origin 2>/dev/null
            for url in $(grep '^https' "$QUEUE"); do
                __
                echo -e " ${g}Codes for: $(sed -n '1p' "$tmp_dir"/DefaultVideo.txt).${nc}\n"

                if [[ "$url" =~ 'youtube.com' ]]; then
                    youtube-dl -F --no-warnings "$url" | sed '1,4d;/^[sb]/d'
                else
                    youtube-dl -F --no-warnings "$url"
                fi

                __
                echo -e " ${g}Choose a format code. \n eg: 137+251 for merging, hls-1080p, 22 for single:${nc}"
                read -r code

                clear

                if (( $(_GetLinesList -q) < 3 )); then
                    __
                    echo " ${g}There is $(_GetLinesList -q) video file left to download.${nc}"
                else
                    __
                    echo " ${g}There are $(_GetLinesList -q) video files left to download.${nc}"
                fi

                if [[ "$code" =~ '+' ]]; then
                    echo " ${g}Please be patient while downloading and merging formats for:"
                    echo -e " ${r}$(sed -n '1p' "$tmp_dir"/DefaultVideo.txt).${nc}\n"
                    youtube-dl \
                    -f "$code" \
                    --no-warnings \
                    --merge-output-format mp4 \
                    --progress "$url"
                else
                    echo " ${g}Please be patient while downloading:"
                    echo -e " ${r}$(sed -n '1p' "$tmp_dir"/DefaultVideo.txt).${nc}\n"
                    youtube-dl -f "$code" --no-warnings --progress "$url"
                fi
                sed -i '2d' "$QUEUE"; sed -i '1d' "$tmp_dir"/DefaultVideo.txt
                clear

            done

            echo -e " ${g}Done.\n${nc}"
            sleep 2
            _GetCompleted -v
        ;;
    esac
}
