#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_CreateAddPlaylistActions() {

    __gettingTitles() (
        clear
        _BlankLine
        printf '%s\n' \
        " ${critical}${Type} titles list is empty, or some titles are missing," \
        " ${task}${b}Updating titles...please wait.${nb}${nc}"
        if [[ $arg == '-a' ]]; then
            _GetMediaTitle --audio
        else
            _GetMediaTitle --video
        fi
    )

    case "$1" in
        --add)
            _CopyMediaUrl
        ;;
        --download)
            if [[ -f $pidofMpv || $downloadTmpList == list ]]; then
                if [[ $arg == '-a' ]]; then _GetAudio -a; else _GetVideo -v; fi
            else
                _MpvOwnsTmpList --list --download || \
                if [[ $arg == '-a' ]]; then _GetAudio -a; else _GetVideo -v; fi
            fi
        ;;
        --play)
            if [[ -f $pidofMpv ]]; then
                printf '\n%s\n' " ${critical}mpv wasn't launched from mpm..."
                _Prompt " kill previous mpv instance? ${nc}" || {
                    return
                }
                _killMpv
                rm "$pidofMpv"
                _LoadAudioVideo "$arg"
            else
                _MpvOwnsTmpList --list --play || _LoadAudioVideo "$arg"
            fi
        ;;
        --remove)
            if [[ -f $pidofMpv ]]; then
                _Remove "$arg"
            else
                _MpvOwnsTmpList --list --remove || _Remove "$arg"
            fi
        ;;
        --save)
            if [[ -f $pidofMpv ]]; then
                _Save "$arg"
            else
                _MpvOwnsTmpList --list --save || _Save "$arg"
            fi
        ;;
        --search)
            if _TestFzfCommand; then
                _MpvOwnsTmpList --list --search || _SearchOnline
            else
                _BlankLine
                printf '%s\n' " ${critical}use_fzf is empty or it's set to ${task}no${nc}" \
                " in your mpmrc...no way to search online!${nc}"
                sleep 5
            fi
        ;;
        --view)
            if [[ -f $URLS && -f $TITLES ]]; then
                mapfile -t U < "$URLS"
                mapfile -t T < "$TITLES"
                ((${#U[@]} != ${#T[@]})) && __gettingTitles
            elif [[ -f $URLS && ! -f $TITLES ]]; then
                __gettingTitles
            else
                printf '%s\n' " ${critical}No links in the $Type list.${nc}"
                sleep 2; return
            fi
            _ViewAudioVideoUrlsInfo "$arg"
        ;;
    esac

}
