#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_SaveCheck() {

    clear
    cd "$playlists_dir" || exit 1

    local listTotal

    lT=(*.m3u); listTotal=$((${#lT[@]}))

    __listAlreadyExists() {
        _BlankLine
        read -rp "${info}"' Enter the new playlist name (do not type extension): '"${nc}" list
        list="$list.m3u"
        [[ -f $list ]] && {
            _RemoveDuplicateLines "$list" "$titles_dir/$list.titles"
            _BlankLine
            _Prompt -n " ${critical}$list ALREADY exists! Overwrite it?:${nc}" && {
                _SaveList
            }
            _Menu
        }
        _SaveList
    }

    _ResizeWindow --main; clear
    _BlankLine
    PS3=""$'\n'" ${info}Type ${task}${listTotal} ${info}to create a new playlist, [${mtitle}C${info}]ancel: ${nc}"
    mapfile -t mapLists < <(
        find . -not -name "default.m3u" -name "*.m3u" -not -name "*_origin" | sort -d | sed 's,.*/,,'
    )

    select list in "${mapLists[@]}"; do

        if [[ $REPLY =~ [a-zA-Z] ]]; then
            [[ -f "$current_list"_origin ]] && {
                mv -f "$current_list"_origin "$current_list"
                mv -f "$current_titles"_origin "$current_titles"
            }
            printf '\n%s\n' " ${critical}Selection aborted or wrong list number.${nc}"
            sleep 3
            return
        elif ((REPLY > $((listTotal)))); then
            printf '\n%s\n' " ${critical}Number too high. Please enter a number between 1 and $listTotal.${nc}"
            sleep 3
            return
        elif ((REPLY < $((listTotal)))); then

            if [[ -e ./$list ]]; then
                _BlankLine
                _Prompt -n " ${critical}$list already exists! Overwrite it?:${nc}" && {
                    _SaveList && break
                }
                _BlankLine
                read -rp " ${info}[S]ave playlist as a new one or [A]dd links to ${list##*/}?: ${nc}" \
                saveOrAddLinksOptions
                case "$saveOrAddLinksOptions" in
                    [aA])
                        cat "$current_list" >> "$list"
                        cat "$current_titles" >> "$titles_dir/$list.titles"
                        _RemoveDuplicateLines "$list" "$titles_dir/$list.titles"
                        printf '\n%s\n' " ${info}Link(s) added to $list.${nc}"
                        sleep 2
                        if [[ -f "$tmp_dir"/saveLinks ]]; then
                            mv -f "$current_list"_origin "$current_list"
                            mv -f "$current_titles"_origin "$current_titles"
                            rm "$tmp_dir"/saveLinks
                        fi
                        break
                    ;;
                    [sS]) __listAlreadyExists ;;
                    *)
                        _WrongOption "$saveOrAddLinksOptions"
                        break
                    ;;
                esac

            else
                _WrongOption "$REPLY"
                break
            fi

        fi

        __listAlreadyExists && break

    done

}
