#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_SaveRemove() {

    local collection action
    collection=$(
        find "$playlists_dir" -not -name "default.m3u" \
        -name "*.m3u" | sort -d | sed 's,.*/,,'
    )

    declare -a promptLists=(
        "[${mtitle}C${info}]ancel,"
        "Save [D]efault,"
        "Save [A]udio,"
        "Save [V]ideo,"
        "[R]emove a playlist,"
        "Remove [M]ultiple playlists."
    )

    declare -a lsts=( "$DEFAULT_TITLES" "$AUDIO_URLS" "$VIDEO_URLS" )

    index=1
    for lst in "${lsts[@]}"; do
        [[ ! -f "$lst" ]] && unset 'promptLists["${index}"]'
        ((index++))
    done

    ((${#promptLists[@]} == 3)) && printf '%s\n' " ${critical}No list to save...${nc}"
    printf '\n%s\n' " ${info}${promptLists[*]}${nc}"
    unset promptLists index lsts

    read -rsn 1 saveRemoveOptions

    case "$saveRemoveOptions" in
        [aA]) _Save -a ;;
        [cC]) _Menu ;;
        [dD])
            rm -f "$tmp_dir"/1 2>/dev/null
            _Save -d
        ;;
        [mM])
            if _TestFzfCommand; then
                _FzfRemoveMultiplePlaylists
            else
                _BlankLine
                printf '%s\n' " ${critical}Fzf must be installed to perform this task," \
                " or use_fzf is set to ${task}no${critical} in your mpmrc.${nc}"
                sleep 5
                return 1
            fi
        ;;
        [rR])
            _TestFzfCommand && {
                action=Remove
                _FzfPlaylistActions --remove
            }

            clear; _BlankLine
            PS3=""$'\n'" ${info}Choose a playlist to remove, [${mtitle}C${info}]ancel :${nc} "
            _BlankLine
            select m3ufile in ${collection}; do

                [[ $REPLY =~ [a-zA-Z] ]] && break
                _MpvOwnsTmpList --collection
                _BlankLine
                _Prompt -n \
                " ${critical}Are you sure you want to remove $m3ufile?:${nc}" && {
                    rm {"$m3ufile","$titles_dir"/"$m3ufile".titles}
                    echo -e "\n ${critical}$m3ufile removed.${nc}"
                    sleep 3
                    break
                }
                echo -e "\n ${info}$m3ufile preserved"
                sleep 2
                break
            done
        ;;
        [vV]) _Save -v ;;
        *) _WrongOption "$saveRemoveOptions" ;;
    esac

}
