#!/bin/bash
## This is a part of main script: mpm.

_CheckCode() {

    __NestedCheckCode() (
        clear
        local BAD="$tmp_dir/badurl"
        __
        echo -e " ${info}${b}Verifying media codes from selected file...be patient.${nb}${nc}\n"

        # mapfile in addition of a for loop is faster
        # than using while <condition>; do <command_2> done < <(command_1)
        mapfile -t CHECKCODE < <(grep '^https' "$QUEUE")

        for line in "${CHECKCODE[@]}"; do
            youtube-dl -F --no-warnings "$line" >"$YTOP"
            if [[ $? -eq 1 ]]; then
                echo "$line" >> "$BAD"
                echo -e " ${critical}${b}No format code found!${nb}\n $line will be removed."
                echo -e " ${info}Please visit: $supportedsites${nc}\n"
                sleep 5
            else
                echo " $line ${info}ok${nc}"
                sleep 1
            fi
        done

        # Now we need to purge the default list from bad urls
        if [[ -f $BAD ]]; then
            for bad in $(grep '^https' "$BAD"); do
                grep -v "${bad}" "$QUEUE" >> "$tmp_dir"/goodurl
            done

            mv -f "$tmp_dir"/goodurl "$QUEUE"
            rm "$BAD"
        fi

    )

    case "$1" in
        -d)
            __NestedCheckCode
            if (( $(_GetLinesList -q) > 0 )); then
                __
                read -rsn 1 -p ${info}' Download [A]udio, [V]ideo:'${nc} get
                case "$get" in
                    a|A)
                        __
                        _GetDefaultAudio
                    ;;
                    v|V)
                        __
                        _GetDefaultVideo
                    ;;
                esac
            fi
        ;;
        -p)
            __NestedCheckCode
            if (( $(_GetLinesList -q) > 0 )); then
                __
                read -rsn 1 -p ${info}' Play [A]udio, [V]ideo?: '${nc} play
                case "$play" in
                    a|A)
                        _LoadAudio -q
                    ;;
                    v|V)
                        _LoadVideo -q
                    ;;
                esac
            fi
        ;;
    esac
}
