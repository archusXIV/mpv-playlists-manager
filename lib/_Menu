#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2034
_Menu() {

    cd "$main_dir" || exit 1

    while [[ -e $QUEUE ]]; do
        _ResizeWindow
        clear
        __
        echo -e "                                            ${mtitle}::MPV-PLAYLISTS-MANAGER $VERSION::" "$(_CheckUpdate)"
        echo -e "                                           $(_LittleStars)"
        echo -e "                                                 ${info}current theme: $THEME.${nc}"
        _ListsCount
        echo -e "                  ┌─────────────────────────────────────────────────────────────────────────────────────┐"
        echo -e "                  │                      GENERAL OPTIONS                       │     ${mtitle}MPMRC SETTINGS${nc}     │"
        echo -e "                  └─────────────────────────────────────────────────────────────────────────────────────┘"
        echo -e "                  ┌─────────────────────────────────────────────────────────────────────────────────────┐"
        if [[ $use_mpvc = yes ]]; then echo -e "                  │                      ${critical}For usage type U${nc}                      │  use mpvc:        ${task}yes${nc}  │"
        elif [[ $use_mpvc = no ]]; then echo -e "                  │                      ${critical}For usage type U${nc}                      │  use mpvc:         ${task}no${nc}  │"; \
        else echo -e "                  │                      ${critical}For usage type U${nc}                      │  use mpvc:      ${task}unset${nc}  │"; fi
        [[ $use_fzf = yes ]] && echo -e "                  │  ────────────────────────────────────────────────────────  │  use fzf:         ${task}yes${nc}  │" || \
        echo -e "                  │  ───────────────────────────────────────────────────────   │  use fzf:          ${task}no${nc}  │"
        [[ $use_parallel = yes ]] && echo -e "                  │  1)  Create/Add video playlist  6)  View default playlist  │  use parallel:    ${task}yes${nc}  │" || \
        echo -e "                  │  1)  Create/Add video playlist  6)  View default playlist  │  use parallel:     ${task}no${nc}  │"
        [[ $direct_download = yes ]] && echo -e "                  │  2)  Create/Add audio playlist  7)  Clear all tmp lists    │  direct download: ${task}$direct_download${nc}  │"
        [[ $direct_download = no ]] && echo -e "                  │  2)  Create/Add audio playlist  7)  Clear all tmp lists    │  direct download:  ${task}$direct_download${nc}  │"
        [[ $automatic_audio_conversion = yes ]] && echo -e "                  │  3)  Save as/Delete a playlist  8)  Edit a playlist        │  conversion auto: ${task}$automatic_audio_conversion${nc}  │"
        [[ $automatic_audio_conversion = no ]] && echo -e "                  │  3)  Save as/Delete a playlist  8)  Edit a playlist        │  conversion auto:  ${task}$automatic_audio_conversion${nc}  │"
        if [[ -z $default_conversion_format ]]; then echo -e "                  │  4)  Play/Download a playlist   ${mtitle}9)${nc}  Edit mpm config file   │  audio format:  ${task}unset${nc}  │"; \
        elif [[ $default_conversion_format != flac ]]; then echo -e "                  │  4)  Play/Download a playlist   ${mtitle}9)${nc}  Edit mpm config file   │  audio format:    ${task}$default_conversion_format${nc}  │"; \
        elif [[ $default_conversion_format = flac ]]; then echo -e "                  │  4)  Play/Download a playlist   ${mtitle}9)${nc}  Edit mpm config file   │  audio format:   ${task}$default_conversion_format${nc}  │"; fi
        [[ $quit_after_task = yes ]] && echo -e "                  │  5)  Load local folder/files    X)  Exit                   │  quit after task: ${task}$quit_after_task${nc}  │"
        [[ $quit_after_task = no ]] && echo -e "                  │  5)  Load local folder/files    X)  Exit                   │  quit after task:  ${task}$quit_after_task${nc}  │"
        echo -e "                  └─────────────────────────────────────────────────────────────────────────────────────┘"
        pgrep -x mpv >/dev/null && _IfMpvc
        test -f "$tmp_dir"/1 \
            && echo -e "                                                     ${info}Select an item${nc}" \
            || echo -e "                                                     ${info}${b}Select an item${nc}${nb}"
        __
        read -rsn 1 mainMenuOptions
        case "$mainMenuOptions" in
            1)  _CreateAddPlaylist -v
                __  ;;
            2)  _CreateAddPlaylist -a
                __  ;;
            3)  _SaveRemove
                __  ;;
            4)  _LoadPlaylist
                __  ;;
            5)  _MpvOwnsTmpList --local || _LoadLocal
                __  ;;
            6)  _ViewAudioVideoUrlsInfo -q
                __  ;;
            7)  _ClearAllTmpLists
                __  ;;
            8)  _EditPlaylist
                __  ;;
            9)  _EditMpmConf
                __  ;;
            n|N)
                if [[ $use_mpvc = yes ]] && [[ -n $mpvc_tui ]]; then
                    "$mpvc_tui"
                else
                    printf '%s\n' " ${critical}No mpv interface setup in your config..." \
                    " use_mpvc must be set to 'yes' or mpvc_tui is empty${nc}"
                    sleep 7
                fi
            ;;
            q|Q)
                pgrep -x mpv >/dev/null && {
                    kill -SIGTERM "$(pidof mpv)"
                    rm {"$(readlink -f "$NOWPLAYING")","$CHOOSE1","$NOWPLAYING"} 2>/dev/null
                    unset m3uFile
                }
            ;;
            r|R)
                mpv_is_running=no
                rm {"$(readlink -f "$NOWPLAYING")","$CHOOSE1","$NOWPLAYING"} 2>/dev/null
                unset m3uFile
            ;;
            t|T) _MpvDisplayTitle
                __ ;;
            u|U)
                lessColor=$'\e[0m';
                # back to default terminal text color
                echo "${lessColor}"
                less "$HELP"
                # apply again custom color
                echo "${nc}"
            ;;
            x|X)
                _IfQuitAfterTask -x
            ;;
            *)
                _WrongOption "$mainMenuOptions"
            ;;
        esac
    done
}
