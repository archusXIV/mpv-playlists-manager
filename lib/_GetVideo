#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2013,SC2154,SC2143,SC2164,SC2317
_GetVideo() {

    local M3UFILE TITLES

    case "$1" in
        -q)
            __
            if [[ ! -f $DEFAULTITLES && \
                -f $DEFAULTM3UTITLES ]]; then
                cat "$DEFAULTM3UTITLES" > \
                "$DEFAULTITLES"
            elif [[ -f $DEFAULTITLES ]]; then
                printf '%s\n' " ${info}Fetching titles file...${nc}"
                sleep 1
            else
                printf '%s\n' " ${info}Getting titles...${nc}"
                _GetMediaTitle -q > "$DEFAULTITLES"
                clear
            fi
            M3UFILE="$QUEUE"
            TITLES="$DEFAULTITLES"
        ;;
        -v)
            __
            [[ $(_GetLinesList -v) -eq 0 ]] && {
                echo " ${critical}No links in the list${nc}"
                sleep 2
                return
            }
            M3UFILE="$VIDEO_URLS"
            TITLES="$VIDEO_TITLES"
        ;;
    esac

    cp -f "$M3UFILE" "$M3UFILE"_origin
    cp -f "$TITLES" "$TITLES"_origin
    clear

    __ChooseFormatMessages() (
        [[ $M3UFILE = "$QUEUE" ]] && {
            printf '%s\n' " ${info}Choose a format code for $(_GetLinkTitle -q)." \
            " eg: 137+251 (video+audio), hls-1080p, 22 for single:${nc}"
        }
        [[ $M3UFILE = "$VIDEO_URLS" ]] && {
            printf '%s\n' " ${info}Choose a format code for $(_GetLinkTitle -v)." \
            " eg: 137+251 (video+audio), hls-1080p, 22 for single:${nc}"
        }
    )

    __DownloadMessages() (
        [[ $TITLES = "$DEFAULTITLES" ]] && {
            printf '%s\n' " ${info}$(_GetLinesList -q) video file(s) left to download." \
            " Downloading:  $(_GetLinkTitle -q)${nc}"
        }
        [[ $TITLES = "$VIDEO_TITLES" ]] && {
            printf '%s\n' " ${info}$(_GetLinesList -v) video file(s) left to download." \
            " Downloading:  $(_GetLinkTitle -v)${nc}"
        }
    )

    cd "$videos_dir" || exit 1

    _GetVideoDownload && {
        echo -e " ${info}Done.\n${nc}"
        sleep 2
        _GetCompleted -v
    }
}
