#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2013,SC2154,SC2076
_GetVideo() {

    local getVideoCounter M3UFILE TITLES

    case "$1" in
        -q)
            __
            if [[ ! -f "$tmp_dir"/DefaultTitles && \
                -f "$titles_dir"/default.m3u.titles ]]; then
                TITLES="$playlists_dir"/default.m3u.titles
            elif [[ -f "$tmp_dir"/DefaultTitles ]]; then
                TITLES="$tmp_dir"/DefaultTitles
            else
                echo " ${info}Getting titles...${nc}"
                _GetMediaTitle -q > "$tmp_dir"/DefaultTitles
                clear
                TITLES="$tmp_dir"/DefaultTitles
            fi
            M3UFILE="$QUEUE"
            cp -f "$M3UFILE" "$M3UFILE"_origin 2>/dev/null
            cp -f "$TITLES" "$TITLES"_origin
        ;;
        -v)
            __
            [[ $(_GetLinesList -v) -eq 0 ]] && {
                echo " ${critical}No links in the list${nc}"
                sleep 2
                _CopyVideo
            }
            M3UFILE="$VIDEO_URLS"
            TITLES="$VIDEO_TITLES"
            cp -f "$M3UFILE" "$M3UFILE"_origin 2>/dev/null
            cp -f "$TITLES" "$TITLES"_origin
        ;;
    esac

    clear
    getVideoCounter=$(grep -c '^https' "$M3UFILE")

    __ChooseFormatMessages() (
        [[ $M3UFILE = "$QUEUE" ]] && {
            printf '%s\n' " ${info}Choose a format code for $(_GetLinkTitle -q)." \
            " eg: 137+251 (video+audio), hls-1080p, 22 for single:${nc}"
        }
        [[ $M3UFILE = "$VIDEO_URLS" ]] && {
            printf '%s\n' " ${info}Choose a format code for $(_GetLinkTitle -v)." \
            " eg: 137+251 (video+audio), hls-1080p, 22 for single:${nc}"
        }
    )

    __DownloadMessages() (
        [[ $TITLES = "$tmp_dir"/DefaultTitles ]] && {
            printf '%s\n' " ${info}$getVideoCounter video file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -q).webm${nc}"
        }
        [[ $TITLES = "$VIDEO_TITLES" ]] && {
            printf '%s\n' " ${info}$getVideoCounter video file(s) left to download." \
            " Please be patient while downloading:  $(_GetLinkTitle -v).webm${nc}"
        }
    )

    cd "$videos_dir" || exit 1

    for getVideoUrl in $(grep '^https' "$M3UFILE"); do
        __
        youtube-dl -F --no-warnings "$getVideoUrl"
        __
        __ChooseFormatMessages
        read -r code
        clear
        __
        if [[ "$code" =~ '+' ]]; then

            __DownloadMessages
            youtube-dl -f "$code" \
            --no-warnings \
            --merge-output-format mp4 \
            --progress "$getVideoUrl"

        else

            __DownloadMessages
            youtube-dl \
            -f "$code" \
            --no-warnings \
            --progress "$getVideoUrl"
        
        fi

        if [[ $M3UFILE = "$VIDEO_URLS" ]]; then
            sed -i '1d' {"$M3UFILE","$TITLES"}
            clear
        else
            sed -i '2d' "$M3UFILE"
            sed -i '1d' "$TITLES"
            clear
        fi

        ((getVideoCounter--))

    done

    echo -e " ${info}Done.\n${nc}"
    sleep 2
    _GetCompleted -v

}
