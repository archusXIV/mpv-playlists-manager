#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_TitlesListCompare() {

    cd "$titles_dir" || return

    local titles
    titles="$titles_dir/$list.titles"
    titles="${titles##*/}"

    # first test if "myplaylist".titles exist.
    if [[ -s $titles ]]; then

        [[ $(grep "" -c "$titles") -ne $(_GetLinesList -l) ]] && {
            __
            printf '%s\n' " ${critical}${titles} is out of date...${nc}" \
            " ${task}${b}Updating titles...please wait.${nb}${nc}"
            _GetMediaTitle -l > "$titles_dir"/"$list".titles
            clear
        }

        case "$1" in
            -g)
                echo -e " ${info}Titles for $list.${nc}\n"
                # sed -n '1,25p' "$titles" | cat -n
                awk 'NR>=1&&NR<=25' "$titles" | cat -n
                __
                read -rsn 1 -p " ${info}[N]ext page, [B]ack to menu.${nc} " nextpage
                case "$nextpage" in
                    b|B) _Menu ;;
                    n|N)
                        clear; __
                        # sed -n '26,$p' "$titles" | cat -n
                        awk 'NR>=26&&NR' "$titles" | cat -n
                        __
                    ;;
                    *)
                        _WrongOption "$nextpage"
                        _Menu
                    ;;
                esac
            ;;
            -l)
                __
                echo -e " ${info}Titles for $list${nc}\n"
                cat -n "$titles"
            ;;
        esac
        
    else
        printf '%s\n' " ${critical}${titles} does not exist...${nc}" \
        " ${task}${b}Getting titles...please wait.${nb}${nc}"
        _GetMediaTitle -l > "$titles_dir"/"$list".titles
        clear
        __
        echo -e " ${info}Titles for $list.${nc}\n"
        cat -n "$titles"
        __

    fi

}