#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_TitlesListCompare() {

    cd "$titles_dir" || return

    local titlesFile
    titlesFile="$list.titles"
    titlesFile="${titlesFile##*/}"
    mapfile -t titlesLines < "$titlesFile"

    if [[ -s $titlesFile ]]; then

        (( ${#titlesLines[@]} != $(_GetLinesList -l) )) && {
            _BlankLine
            printf '%s\n' " ${critical}${titlesFile} is out of date...${nc}" \
            " ${task}${b}Updating $(_GetLinesList -l) titles...please wait.${nb}${nc}"
            _GetMediaTitle --list
            clear
        }

        case "$1" in
            --fzf) _FzfChooseTitles ;;
            --next-page)
                echo -e "\n ${info}Titles for $list.${nc}\n"
                awk 'NR>=1&&NR<=25' "$titlesFile" | nl
                _BlankLine
                read -rsn 1 -p " ${info}[N]ext page, [B]ack to main menu.${nc}" nextpage
                case "$nextpage" in
                    [bB]) _Menu ;;
                    [nN])
                        clear; _BlankLine
                        awk 'NR>=26&&NR<=50' "$titlesFile" | nl -v 26
                        _BlankLine
                    ;;
                    *)
                        _WrongOption "$nextpage"
                        _Menu
                    ;;
                esac
            ;;
            --list)
                echo -e "\n ${info}Titles for $list${nc}\n"
                nl "$titlesFile"; _BlankLine
            ;;
        esac

    else
        _BlankLine
        printf '%s\n' " ${critical}${titlesFile} does not exist or empty...${nc}" \
        " ${task}${b}Getting $(_GetLinesList -l) titles...please wait.${nb}${nc}"
        touch "$titlesFile"; _GetMediaTitle --list; clear
        echo -e "\n ${info}Titles for $list.${nc}\n"
        nl "$titlesFile"
        _BlankLine
    fi

}
