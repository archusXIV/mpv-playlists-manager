#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2001
_CopyMediaUrl() {

    local mediaUrl

    rm "$tmp_dir"/urltest 2>/dev/null

    if __clipboardCmdTest; then
        read -r mediaUrl < <("${clipboardCmd[@]}")
    else
        echo -e "\n Paste an url to fill the ${info}${Type}${nc} playlist:\n"
        read -r mediaUrl
    fi

    if [[ $mediaUrl =~ 'playlist?list='|'odysee.com\/$\/playlist\/' ]]; then
        printf '\n%s\n' \
        " ${info}Getting titles & links from playlist: $(\
            yt-dlp "${ytdlPreset_DW[@]}" -J --flat-playlist "$mediaUrl" \
            | jq --raw-output .title)..." "${b} Please be patient.${nb}${nc}"
        _GetYoutubePlaylistUrls "$arg"
    else
        mediaUrl=$(echo "$mediaUrl" | sed 's/&list=.*//')
        printf '\n%s\n' " ${info}Testing url...${nc}"
        if [[ $mediaUrl =~ ^https ]]; then
            yt-dlp --print formats_table "$mediaUrl" > "$tmp_dir"/urltest
            if grep -qw 'ERROR' "$tmp_dir"/urltest; then
                printf '%s\n' " ${critical}${b}Unsupported url!${nb}"\
                " $mediaUrl removed..." \
                " ${info}Please visit: $supportedSites${nc}"
                sleep 7
            else
                if [[ $arg == '-a' ]] && ! grep -qe 'audio' "$tmp_dir"/urltest; then
                    printf '%s\n' " ${critical}No audio format found...${nc}" \
                    " removing $mediaUrl..."; sleep 3; return
                fi
                echo "$mediaUrl" | tee -a "$URLS" >> "$DEFAULT_LIST"
                printf '%s\n' " ${info}Getting ${Type} title...${nc}"
                yt-dlp --skip-download --get-title "${ytdlPreset_DW[@]}" "$mediaUrl" \
                | tee -a "$TITLES" >> "$DEFAULT_TITLES"
                _RemoveCrap; clear; _IfDuplicatesFiles
            fi
        else
            printf '%s\n' " ${critical}Not a valid url...try again${nc}"
            sleep 2
        fi
    fi

}
