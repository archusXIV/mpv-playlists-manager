#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2044
_LoadPlaylist() {
    cd "$playlists_dir" || exit 1

    [[ -z $(find . -type f -not -name "default.m3u" -name "*.m3u") ]] && {
        clear; __
        printf '%s\n' " ${critical}No playlist found!${nc}" \
        " ${task}First make a temporary list using options 1 or 2," \
        " save it as wathever you like, then come back to play/download it.${nc}"
        sleep 8 && return

    }

    for dotM3uFile in $(find . -type f -name "*.m3u"); do
        [[ -f "$dotM3uFile"_origin ]] \
        && mv "$dotM3uFile"_origin "$dotM3uFile"
    done
     
    clear
    touch 1_Back_to_menu
    __

    PS3=""$'\n'"${info}Select a playlist to load or hit 1) for main menu:${nc} "
    select list in $(find . -type f -not -name "default.m3u" \
        | sort -d | sed 's,.*/,,'); do

        [[ $list = 1_Back_to_menu ]] && rm 1_Back_to_menu && break

        [[ $(_GetLinesList -l) -eq 0 ]] && {
            echo " ${critical}No links found in $list (empty or does not contains #EXTM3U header)."
            echo " You can edit and fix it in option 8) Edit a playlist.${nc}"
            sleep 8
            break
        }

        rm 1_Back_to_menu
        clear
        __
        printf '%s\n' " ${info}Choose an option for${nc} $list:"
        __
        read -rn 1 -p "${info}"' [1] Download/Play, [2] View titles: '"${nc}" submenu
        __
        case "$submenu" in
            1)
                clear; _LoadPlaylistMenu
            ;;
            2)
                clear
                _TitlesListCompare
                read -rn 1 \
                -p "${info}"' [1] Download/Play, [2] Back to menu: '"${nc}" loadPlaylistOptions
                __
                case "$loadPlaylistOptions" in
                    1) clear; _LoadPlaylistMenu ;;
                    2) return ;;
                    *)
                        __
                        printf '%s\n' " ${critical}Wrong option...${nc}"
                        sleep 2
                        return
                    ;;
                esac
            ;;
            *)
                __
                printf '%s\n' " ${critical}Wrong option...${nc}"
                sleep 2
                return
            ;;
        esac

    done
}