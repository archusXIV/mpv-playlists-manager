#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2013,SC2154,SC2076,SC2031,SC2030,SC2164
_DownloadVideoList() {
    cd "$playlists_dir" || exit 1

    _TitlesListCompare
    local counter

    if [[ $direct_download = yes ]]; then
        clear
        _DirectVideoDownload
    else
        clear
        printf '%s\n' " ${task}Direct download disabled."
        __
        printf '%s\n' " ${critical}Tip: direct download will always pick the best format," \
        " on Youtube webm may be the best one but we'll merge files in mp4."
        echo -e " ${info}[B]ack to download options, choose [S]pecific codes or [D]irect download?:\n${nc}"
        read -rsn 1 choice
    fi

    case "$choice" in
        b|B) clear; return ;;
        d|D) clear; _DirectVideoDownload ;;
        s|S)
            clear
            cp -f "$list" "$list"_origin
            mkdir --parents "$videos_dir"/"${list%.*}" \
            && cd "$videos_dir"/"${list%.*}"
            
            mapfile -t SELECTEDCODES < <(grep '^https' "$playlists_dir"/"$list")
            counter="${#SELECTEDCODES[@]}"
            
            for downloadVideoUrl in "${SELECTEDCODES[@]}"; do
                
                clear
                __
                youtube-dl -F "${ytdlPreset_DW[@]}" "$downloadVideoUrl" \
                | awk '$0 !~ /sb|youtube/{print $0}'
                __
                printf '%s\n' " ${critical}If you pick a format from a none m3u8 protocol, download will fail " \
                " if ffmpeg is set as downloader in your configuration file." \
                " ${info}Choose a format code for: $(_GetLinkTitle -l)" \
                " eg: 137+251 for merging, hls-1080p, 22 for single:${nc}"
                
                read -r code
                clear
                __
                printf '%s\n' " ${info}$counter file(s) left to download." \
                " Downloading $(_GetLinkTitle -l).${nc}"
                
                if [[ "$code" =~ '+' && $(_GetLinkTitle -l) =~ '/' ]]; then
                    youtube-dl --format "$code" \
                    "${ytdlPreset_X[@]}" "$downloadVideoUrl"
                elif [[ "$code" =~ '+' ]]; then
                    youtube-dl --format "$code" \
                    --output "$(_GetLinkTitle -l).%(ext)s" \
                    "${ytdlPreset_X[@]}" "$downloadVideoUrl"
                else
                    youtube-dl --format "$code" \
                    --output "$(_GetLinkTitle -l).%(ext)s" \
                    "${ytdlPreset_NC[@]}" "$downloadVideoUrl"
                fi

                sed -i '2d' "$playlists_dir"/"$list"
                sed -i '1d' "$titles_dir"/"$list".titles
                ((counter--))
                clear

            done
        ;;
    esac

    echo " ${info}All done${nc}"
    sleep 2
    _DownloadCompleted

}