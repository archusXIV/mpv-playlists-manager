#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_ViewAudioVideoUrlsInfo() {

    local stars

    viewUrlInfoPrompt=(
        "[M]aim menu," "[A]dd more links," "[D]ownload,"
        "[P]lay," "[S]ave as," "[R]emove links/list: "
    )

    mpvOwnsInfoPrompt=(
        "[M]aim menu," "[D]ownload (this list will be preserved after download)"
    )

    # let's play...
    stars=$(printf "%-56s" "*")

    __listHeader() (
        clear
        __
        if (($(grep -c '^https' "$menuTitleType_$URLS") > 12)); then
            printf '%s\n' " ${info}ORDER | $menuTitleType PLAYLIST TITLES (to many urls to show).${nc}"
            echo -e " ${info}${stars// /*}${nc}\n"
            nl "$menuTitleType_$TITLES"
            __
        else
            printf '%s\n' " ${info}ORDER |  $menuTitleType PLAYLIST LINKS & TITLES.${nc}"
            echo -e " ${info}${stars// /*}${nc}\n"
            awk '$0 ~ /^https/{print $0}' "$menuTitleType_$URLS" \
            | nl && {
                __
                nl "$menuTitleType_$TITLES"
                __
            }
        fi

        if [[ $URLS = "$DEFAULT_LIST" ]]; then
            if [[ $downloadTmpList = default ]]; then
                echo " ${info}${mpvOwnsInfoPrompt[*]}${nc}"
            else
                unset 'viewUrlInfoPrompt[1]'
                echo "${info}" "${viewUrlInfoPrompt[*]}" "${nc}"
            fi
        else
            if [[ $downloadTmpList = list ]]; then
                echo " ${info}${mpvOwnsInfoPrompt[*]}${nc}"
            else
                echo "${info}" "${viewUrlInfoPrompt[@]}" "${nc}"
            fi
        fi

    )

    __audioVideoCommon() {
        if [[ -s $URLS ]]; then
            __listHeader
            read -rsn 1 audioVideoCommonOptions
            case "$audioVideoCommonOptions" in
                a|A) _CreateAddPlaylist "$arg" ;;
                d|D) _CreateAddPlaylistActions --download ;;
                m|M) _Menu ;;
                p|P) _CreateAddPlaylistActions --play ;;
                r|R) _CreateAddPlaylistActions --remove ;;
                s|S) _CreateAddPlaylistActions --save ;;
                *)
                    _WrongOption "$audioVideoCommonOptions"
                    return
                ;;
            esac
        else
            printf '%s\n' " ${critical}No links in the $Type list${nc}"
            sleep 2 && return
        fi
    }

    case "$1" in
        -a|-v) __audioVideoCommon ;;
        -q) _ViewDefaultUrlsInfo ;;
    esac
}
