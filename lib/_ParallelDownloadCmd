#!/usr/bin/env bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154
_ParallelDownloadCmd() {

    local audioJobs videoJobs
    audioJobs=8 videoJobs=4

    __sedCleanListsAndTitles() {
        if [[ $M3UFILE == "$DEFAULT_LIST" ]]; then
            sed -i '1,$d' {"$M3UFILE","$TITLES"}
            echo "#EXTM3U" > "$DEFAULT_LIST"
        elif [[ $M3UFILE == "$SELECTED_URLS1" ]]; then
            sed -i '1,$d' "$SELECTED_TITLES"
        else
            sed -i '1,$d' {"$M3UFILE","$TITLES"}
        fi
        clear
    }

    declare -a ytfmt=(
        "yt-dlp --format"
        "bestaudio/best"
        "bestvideo+bestaudio/best"
    )

    # using commas instead of slashes as separators,
    # because we need ${ytfmt[@]:1:2} outside of sed too but later in option xargs.
    __sedAudioCmd() (
        sed -i "s,^,${ytfmt[0]} ${ytfmt[1]} ${ytdlPreset_NC[*]} ," "$1"
    )
    __sedVideoCmd() (
        sed -i "s,^,${ytfmt[0]} ${ytfmt[2]} ${ytdlPreset_X[*]} ," "$1"
    )

    case "$1" in
        parallel)
            case "$2" in
                --choose-audio|--choose-video)
                    cp "$M3UFILE" "$JOBSLIST"
                    if [[ $2 == "--choose-audio" ]]; then
                        __sedAudioCmd "$JOBSLIST"
                        Jobs="${audioJobs}"
                    else
                        __sedVideoCmd "$JOBSLIST"
                        Jobs="${videoJobs}"
                    fi
                    {
                        parallel --keep-order --jobs ${Jobs} < "$JOBSLIST"
                        __sedCleanListsAndTitles
                        clear
                    } &
                ;;
                --get-audio|--get-video|--direct-video)
                    if [[ $2 == '--get-audio' ]]; then
                        [[ $M3UFILE != "$AUDIO_URLS" ]] && sed -i '1d' "$M3UFILE"
                        __sedAudioCmd "$M3UFILE"
                        Jobs="${audioJobs}"
                    else
                        [[ $M3UFILE != "$VIDEO_URLS" ]] && sed -i '1d' "$M3UFILE"
                        __sedVideoCmd "$M3UFILE"
                        Jobs="${videoJobs}"
                    fi
                    {
                        parallel --keep-order --jobs ${Jobs} < "$M3UFILE"
                        __sedCleanListsAndTitles
                    } &
                ;;
            esac
            rm -f "$JOBSLIST"
        ;;
        xargs)
            while read -r line; do
                [[ $line =~ ^https ]] && https+=("${line}")
            done < "${M3UFILE}"
            case "$2" in
                --choose-audio|--get-audio)
                    printf '%s\n' "${https[@]}" | xargs -I '{}' -P ${audioJobs} \
                    yt-dlp --format "${ytfmt[1]}" "${ytdlPreset_NC[@]}" {}
                    __sedCleanListsAndTitles
                ;;
                --choose-video|--direct-video|--get-video)
                    printf '%s\n' "${https[@]}" | xargs -I '{}' -P ${videoJobs} \
                    yt-dlp --format "${ytfmt[2]}" "${ytdlPreset_X[@]}" {}
                    __sedCleanListsAndTitles
                ;;
            esac
        ;;
    esac

} >/dev/null 2>&1
