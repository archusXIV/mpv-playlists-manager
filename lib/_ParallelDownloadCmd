#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2154,SC2002
_ParallelDownloadCmd() {

    declare -a ytf=(
        "yt-dlp --format bestaudio\/best"
        "yt-dlp --format bestvideo+bestaudio\/best"
    )
    
    __sedAudioCmd() { sed -i "s/^/${ytf[0]} ${ytdlPreset_NC[*]} /" "$1"; }
    __sedVideoCmd() { sed -i "s/^/${ytf[1]} ${ytdlPreset_X[*]} /" "$1"; }

    __getM3ufileTest() (
        if [[ $M3UFILE = "$QUEUE" ]]; then
            sed -i '1,$d' {"$M3UFILE","$TITLES"}
            echo "#EXTM3U" > "$M3UFILE"
        else
            sed -i '1,$d' {"$M3UFILE","$TITLES"}
        fi
        clear
    )

    case "$1" in
        --choose-audio)
            cp "$M3UFILE" "$JOBSLIST"
            __sedAudioCmd "$JOBSLIST"
            {
                parallel --delay 1.75 --jobs 4 < "$JOBSLIST"
                sed -i '1,$d' "$SELECTEDTITLES"
                clear
            } &
        ;;
        --choose-video)
            cp "$M3UFILE" "$JOBSLIST"
            __sedVideoCmd "$JOBSLIST"
            {
                parallel --delay 2.5 --jobs 4 < "$JOBSLIST"
                sed -i '1,$d' "$SELECTEDTITLES"
                clear
            } &
        ;;
        --direct-video)
            sed -i '1d' "$playlists_dir"/"$list"
            __sedVideoCmd "$playlists_dir"/"$list"
            {
                parallel --delay 2.5 --jobs 4 < "$playlists_dir"/"$list"
                sed -i '1,$d' {"$playlists_dir"/"$list","$titles_dir"/"$list".titles}
                clear
            } &
        ;;
        --get-audio)
            [[ $M3UFILE = "$QUEUE" || $M3UFILE = "$playlists_dir"/"$list" ]] && \
            sed -i '1d' "$M3UFILE"
            __sedAudioCmd "$M3UFILE"
            {
                parallel --delay 1.75 --jobs 4 < "$M3UFILE"
                __getM3ufileTest
            } &
        ;;
        --get-video)
            [[ $M3UFILE = "$QUEUE" ]] && sed -i '1d' "$M3UFILE"
            __sedVideoCmd "$M3UFILE"
            {
                parallel --delay 2.5 --jobs 4 < "$M3UFILE"
                __getM3ufileTest
            } &
        ;;
        --yt-playlist)
            yt-dlp --flat-playlist "$url" | parallel --tagstring '{#}' --lb -j0 \
            yt-dlp --get-title --get-id --ignore-errors --no-warnings \
            --playlist-start '{#}' --playlist-end '{#}' "$url" \
            > "$tmp_dir"/playlist.txt

            sort -ns "$tmp_dir"/playlist.txt \
            | tee -a "$tmp_dir"/playlist.m3u >> "$tmp_dir"/playlist.titles
            sed -i '
                s/^[[:digit:]]*//;
                s/^\s//;
                s/^/https:\/\/www.youtube.com\/watch?v=/;1~2d
            ' "$tmp_dir"/playlist.m3u
            cat "$tmp_dir"/playlist.m3u | tee -a "$QUEUE" >> "$URLS"
            sed -i 's/^[[:digit:]]*//;s/^\s//;2~2d' "$tmp_dir"/playlist.titles
            cat "$tmp_dir"/playlist.titles | tee -a "$DEFAULTITLES" >> "$TITLES"
        ;;
    esac

    rm -rf "$HOME"/.parallel
    rm "$tmp_dir"/playlist.*
    rm "$JOBSLIST"

} >/dev/null 2>&1
