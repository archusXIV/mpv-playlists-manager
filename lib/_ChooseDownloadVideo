#!/bin/bash
## This is a part of main script: mpm.

_ChooseDownloadVideo() {
    cd "$playlists_dir" || exit 1
    
    _TitlesListCompare
    
    cp -f "$list" "$list"_origin 2>/dev/null
    
    IFS=","; read -a array \
    -p " Enter video titles numbers separeted by comma, eg: 3,1,5: "
    
    clear
    cd "$videos_dir" || exit 1
    
    local counter="${#array[*]}"
    
    for i in ${array[*]}; do
        ((i++))
        url=$(sed -n "${i}p" "$playlists_dir"/"$list")
        echo "$url" >> "$CHOOSE1"
        
        if [[ $i =~ youtube.com ]]; then
            __
            youtube-dl -F --no-warnings "$url" \
            | sed '1,5d;/^[sb]/d;/^\s*$/d;s/-//g;/^\s*$/d'
        else
            youtube-dl -F --no-warnings "$url"
        fi
        
        __
        echo " ${g}Choose a format code."
        echo " eg: 137+251 for merging, hls-1080p, 22 for single:${nc}"
        read -r code
        sleep 0.5
        clear
        printf '%s\n' " ${g}Total downloads: $counter${nc}"
        if [[ "$code" =~ + ]]; then
            youtube-dl -f "$code" \
            --no-warnings \
            --merge-output-format mp4 \
            --progress "$url"
        else
            youtube-dl -f "$code" \
            --no-warnings --progress "$url"
        fi
        ((counter--))
        clear
        
    done

    cd "$playlists_dir" || exit 1
    # let's remove downloaded links from the original file
    # and sending the other ones in a second temporary file...
    for line in $(grep '^https' "$CHOOSE1"); do
        grep -v "${line}" "$list" >> "$CHOOSE2"
    done
    
    # ...that we now rename with the original file name.
    mv -f "$CHOOSE2" "$list"
    rm "$CHOOSE1"
    
    # if we don't unset IFS other functions will be messed up!
    unset IFS
    
    echo -e " ${g}Done${nc}\n"
    echo -e " ${c}Updating titles...${b}please wait.${nb}${nc}\n"
    _GetMediaTitle -l > "$titles_dir"/"$list".titles
    _DownloadCompleted

}
