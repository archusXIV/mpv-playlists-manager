#!/bin/bash
## This is a part of main script: mpm.

# shellcheck disable=SC2076,SC2154,SC2015
_ChooseDownloadVideo() {

    local counter mediaDir youtube
    clear

    mediaDir="$videos_dir"/"${list%.*}"

    if [[ $direct_download == yes ]]; then
        _ChooseDirectVideoDownload
    else
        _DownloadMessages --choice
        read -rsn 1 chooseDownloadVideoOptions
        clear
    fi

    case "$chooseDownloadVideoOptions" in
        b|B) clear; return ;;
        d|D) _ChooseDirectVideoDownload ;;
        s|S)
            _TitlesListCompare -l
            _GetRange
            clear

            cp -f "$playlists_dir"/"$list" "$playlists_dir"/"$list"_origin
            cp -f "$SELECTED_TITLES" "$SELECTED_TITLES"_orgin
            mkdir --parents "$mediaDir" && cd "$mediaDir" || {
                printf '%s\n' \
                " ${critical}Failed to access ${mediaDir##*/} directory.${nc}"
                sleep 4
                _Menu
            }

            readarray -t CHOSENCODES < "$SELECTED_URLS1"
            counter="${#CHOSENCODES[@]}"

            for url in "${CHOSENCODES[@]}"; do

                if [[ $url =~ 'youtube.com' ]]; then
                    youtube="yes"
                    __
                    yt-dlp -F "${ytdlPreset_DW[@]}" "$url" \
                    | awk '$0 !~ /sb|youtube/{print $0}'
                else
                    yt-dlp -F "${ytdlPreset_DW[@]}" "$url"
                fi

                _DownloadMessages --m3u8
                read -r code
                clear
                printf '\n%s\n' " ${info}$counter file(s) left to downloads." \
                " Downloading: $(_GetLinkTitle -s)${nc}"

                if [[ $youtube == yes ]]; then
                    yt-dlp --output "$(_GetLinkTitle -s).%(ext)s" \
                    --format "$code" "${ytdlPreset_X[@]}" "$url"
                else
                    yt-dlp --output "$(_GetLinkTitle -s).%(ext)s" \
                    --format "$code" "${ytdlPreset_NC[@]}" "$url"
                fi

                sed -i '1d' "$SELECTED_TITLES"
                ((counter--))
                clear

            done

            unset url
        ;;
        *)
            _WrongOption "$chooseDownloadVideoOptions"
            _LoadPlaylistMenu
        ;;
    esac

    _RemoveAudioVideoIds
    _UpdateSelected -u
    echo " ${info}All done${nc}"
    sleep 2
    clear
    _DownloadCompleted

}
